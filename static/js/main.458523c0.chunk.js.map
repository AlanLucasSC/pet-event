{"version":3,"sources":["components/shared/container/main.jsx","components/shared/modal/button.jsx","components/shared/markdown/index.jsx","components/shared/modal/modal.jsx","components/auth/constant.jsx","components/utils/auth.jsx","components/utils/document.js","components/auth/input.jsx","components/auth/submit.jsx","components/auth/loading.jsx","components/auth/login/index.jsx","components/auth/error.jsx","components/utils/firebaseUtils.js","components/services/firebaseService.js","components/utils/email.js","components/auth/auth.js","components/auth/select.jsx","components/auth/textarea.jsx","components/auth/inscription/index.jsx","components/description/index.jsx","components/route/route.jsx","components/App.js","serviceWorker.js","index.js"],"names":["Main","props","react_default","a","createElement","className","children","ModalButton","type","data-toggle","data-target","target","Markdown","Modal","id","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","False","Void","undefined","InitialInput","isEmail","email","test","String","toLowerCase","isPassword","password","isNothing","value","isRga","length","checkForm","is","object","Object","values","index","Input","isValid","inputValidation","isVoid","placeholder","onChange","required","validMessage","invalidMessage","htmlFor","Submit","error","Loading","isLoading","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rga","handleSubmit","bind","assertThisInitialized","rgaChange","passwordChange","LoadingOn","LoadingOff","event","setState","preventDefault","console","log","setTimeout","modal","onSubmit","loading_Loading","input_Input","submit_Submit","Component","Error","isSuccess","message","firebaseDatabase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","FirebaseService","getOneData","_callee","path","query","snapshot","regenerator_default","wrap","_context","prev","next","ref","child","once","sent","val","abrupt","stop","listenIfChildAdded","callback","on","insertData","form","set","sgMail","require","sendEmail","setApiKey","msg","to","from","subject","text","html","send","doInscription","_ref","asyncToGenerator","mark","success","objectSpread","md5","_x","apply","arguments","Select","name","Option","Textarea","rows","isSuccessSubmit","inscriptionState","isName","isCourse","isContact","isEmergencyContact","course","contact","emergencyContact","group","gender","ethnicity","arrivalDate","departureDate","allergy","deficiency","nameChange","emailChange","courseChange","contactChange","emergencyContactChange","inputChange","submitError","submitDefault","checked","defineProperty","doInscriptionResponse","select_Select","select_Option","textarea_Textarea","error_Error","Description","main","modal_button","markdown","login_Login","inscription_Login","Router","isLoggedIn","user","_this2","BrowserRouter","Switch","Route","exact","render","description_Description","assign","App","route","Boolean","window","location","hostname","match","ReactDOM","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.458523c0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <div className=\"container mt-5 mb-5\">\r\n            <div className=\"row justify-content-center\">\r\n                { props.children }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react'\r\n\r\nconst ModalButton = (props) => {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-outline-primary m-2\" data-toggle=\"modal\" data-target={ props.target }>\r\n            { props.children }\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ModalButton","import React from 'react'\r\n\r\nconst Markdown = (props) => {\r\n    return (\r\n        <div className=\"markdown p-3\">\r\n            <h1> <strong>XXI Semana da Matemática – 4 a 7 de dezembro/2018.</strong> </h1>\r\n            <p>\r\n                A <strong>XXI Semana de Matemática</strong> tem como objetivo principal a criação de um ambiente onde estudantes das escolas públicas e privadas, educadores, acadêmicos, professores da universidade e a comunidade em geral possam interagir, trocando experiências profissionais e conhecimentos matemáticos.\r\n            </p>\r\n            <p>\r\n                Nesta edição pretende-se promover o curso de Licenciatura em Matemática da instituição por meio da discussão de assuntos relacionados ao ensino da Matemática, suas tecnologias e a formação de profissionais na área da Licenciatura em Matemática por meio do Programa Institucional de Bolsas de Iniciação a Docência (Pibid) e o Programa de Residência Pedagógica (RP). Procura-se também favorecer a aproximação dos acadêmicos com as escolas da Educação Básica e com professores da disciplina da Matemática.\r\n            </p>\r\n            <p>\r\n                Em sua programação, o evento conta com palestrantes, minicursos, oficinas e exposição de trabalhos desenvolvidos pelos alunos e relacionados com a Matemática e o ensino da Matemática nas escolas de educação básica. O evento deve ser também um momento de socialização e integração entre os acadêmicos do curso de graduação, docentes das universidades, alunos da pós-graduação, alunos e professores de escolas da Educação Básica.\r\n            </p>\r\n            <ul>\r\n                <li> \r\n                    As inscrições poderão ser realizadas até o dia 04/12/2018 na Coordenação do Curso de Matemática (Espaço Multiuso – Sala 1 – Unid. I) ou na Sala H-227 (Unid. I) ou na Sala 5 (Unid. II) com os acadêmicos ANDRESSA BRITTES, Contato: 99929-0565; ARIEL DA SILVA COSTA, Contato: 99830-2296; DANIELLE VELASQUEZ, Contato: 99121-9825; DANIEL SOUZA, Contato: 99695-8925 ou ILMA DANIELLE, Contato: 98437-2330.\r\n                </li>\r\n            \r\n                <li>\r\n                    As inscrições poderão ser realizadas até o dia 04/12/2018 na Coordenação do Curso de Matemática (Espaço Multiuso – Sala 1 – Unid. I) ou na Sala H-227 (Unid. I) ou na Sala 5 (Unid. II) com os acadêmicos ANDRESSA BRITTES, Contato: 99929-0565; ARIEL DA SILVA COSTA, Contato: 99830-2296; DANIELLE VELASQUEZ, Contato: 99121-9825; DANIEL SOUZA, Contato: 99695-8925 ou ILMA DANIELLE, Contato: 98437-2330.\r\n                </li>\r\n                <li>\r\n                    As inscrições poderão ser realizadas até o dia 04/12/2018 na Coordenação do Curso de Matemática (Espaço Multiuso – Sala 1 – Unid. I) ou na Sala H-227 (Unid. I) ou na Sala 5 (Unid. II) com os acadêmicos ANDRESSA BRITTES, Contato: 99929-0565; ARIEL DA SILVA COSTA, Contato: 99830-2296; DANIELLE VELASQUEZ, Contato: 99121-9825; DANIEL SOUZA, Contato: 99695-8925 ou ILMA DANIELLE, Contato: 98437-2330.\r\n                </li>\r\n                <li>\r\n                    As inscrições poderão ser realizadas até o dia 04/12/2018 na Coordenação do Curso de Matemática (Espaço Multiuso – Sala 1 – Unid. I) ou na Sala H-227 (Unid. I) ou na Sala 5 (Unid. II) com os acadêmicos ANDRESSA BRITTES, Contato: 99929-0565; ARIEL DA SILVA COSTA, Contato: 99830-2296; DANIELLE VELASQUEZ, Contato: 99121-9825; DANIEL SOUZA, Contato: 99695-8925 ou ILMA DANIELLE, Contato: 98437-2330.\r\n                </li>\r\n                <li>\r\n                    As inscrições poderão ser realizadas até o dia 04/12/2018 na Coordenação do Curso de Matemática (Espaço Multiuso – Sala 1 – Unid. I) ou na Sala H-227 (Unid. I) ou na Sala 5 (Unid. II) com os acadêmicos ANDRESSA BRITTES, Contato: 99929-0565; ARIEL DA SILVA COSTA, Contato: 99830-2296; DANIELLE VELASQUEZ, Contato: 99121-9825; DANIEL SOUZA, Contato: 99695-8925 ou ILMA DANIELLE, Contato: 98437-2330.\r\n                </li>\r\n                <li>\r\n                    As inscrições poderão ser realizadas até o dia 04/12/2018 na Coordenação do Curso de Matemática (Espaço Multiuso – Sala 1 – Unid. I) ou na Sala H-227 (Unid. I) ou na Sala 5 (Unid. II) com os acadêmicos ANDRESSA BRITTES, Contato: 99929-0565; ARIEL DA SILVA COSTA, Contato: 99830-2296; DANIELLE VELASQUEZ, Contato: 99121-9825; DANIEL SOUZA, Contato: 99695-8925 ou ILMA DANIELLE, Contato: 98437-2330.\r\n                </li>\r\n            </ul>\r\n            <h2> <strong> DATA: 06/12/2018 – QUINTA-FEIRA </strong> </h2>\r\n            <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                    <th>HORÁRIO</th>\r\n                    <th>ATIVIDADE</th>\r\n                    <th>CONVIDADOS</th>\r\n                    <th>LOCAL</th>\r\n                    <th>VAGAS</th>\r\n                    <th>CH</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                    <td>10h – 12h 14h – 16h</td>\r\n                    <td>Credenciamento</td>\r\n                    <td>–</td>\r\n                    <td>Corredor H-108 (Unid. I)</td>\r\n                    <td>–</td>\r\n                    <td>4 h</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Markdown","import React from 'react'\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <div className=\"modal fade\" id={ props.id } tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog bg-white rounded\" role=\"document\">\r\n                <div className=\"modal-content login d-flex py-5\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-9 col-lg-9 mx-auto\">\r\n                                { props.children }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Fechar</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal","export const True = true\r\nexport const False = false\r\nexport const Void = undefined\r\nexport const Null = null\r\nexport const InitialInput = ''\r\nexport const Invalid = 'is-invalid'\r\nexport const Valid = 'is-valid'\r\nexport const Nothing = ''","import { True, False, Void, Nothing } from '../auth/constant'\r\nimport { objectToArray } from './document'\r\n\r\nexport const isEmail = (email) => {\r\n    var validEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return validEmail.test(String(email).toLowerCase());\r\n}\r\n\r\nexport const isPassword = (password) => {\r\n    var validPassword = /\\w{8,}/;\r\n    return validPassword.test(String(password));\r\n}\r\n\r\nexport const isVoid = (value) => {\r\n    return value === Void ? True : False\r\n}\r\n\r\nexport const isNothing = (value) => {\r\n    return value === Nothing ? True : False\r\n}\r\n\r\nexport const isRga = (value) => {\r\n    var rgaLength = 12\r\n    return value.length === rgaLength ? True : False\r\n}\r\n\r\nexport const checkForm = ( is ) => {\r\n    is = objectToArray( is )\r\n    for(var index = 0; index < is.length; index++){\r\n        var element = is[index]\r\n        if( element !== True ){\r\n            return false\r\n        }\r\n    }\r\n    return true\r\n}","export const hasChanges = (changes) => {\r\n    return changes.length === 0 ? true : false\r\n}\r\n\r\nexport const INITIAL_STATE = {\r\n    databaseDocument: '',\r\n    userDocument: '',\r\n    changes: [],\r\n    user: ''\r\n}\r\n\r\nexport const getElementOnArrayInReverse = (array, index) => {\r\n    var reverseArray = array.reverse()\r\n    return reverseArray[ index ]\r\n}\r\n\r\nexport const objectToArray = ( object ) => {\r\n    return Object.values( object )\r\n}\r\n\r\nexport const isoDateToShortDateWithHours = (dateObject) => {\r\n    let date = new Date( String( dateObject ) )\r\n    let dateShortFormat = date.getDay() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear()\r\n    let hours = date.getHours() + ':' + date.getMinutes()\r\n    return dateShortFormat + ' ' + hours\r\n}","import React from 'react'\r\n\r\nimport { True, False, Valid, Invalid, Nothing } from './constant'\r\nimport { isVoid } from '../utils/auth'\r\n\r\nconst validation = (value) => {\r\n    return value ? True : False\r\n}\r\n\r\nexport const Input = (props) => {\r\n    var isValid = props.isValid\r\n    var inputValidation = validation(isValid) ? Valid : Invalid\r\n        inputValidation = !isVoid(isValid) ? inputValidation : Nothing\r\n\r\n    return (\r\n        <div className=\"form-label-group\">\r\n            <input \r\n                type={ props.type } \r\n                id={ props.id } \r\n                className={ \"form-control \" + inputValidation } \r\n                placeholder={ props.placeholder } \r\n                onChange={ props.onChange }\r\n                value={ props.value }\r\n                required\r\n            />\r\n            <div className=\"text-center valid-feedback\">\r\n                { props.validMessage }\r\n            </div>\r\n            <div className=\"text-center invalid-feedback\">\r\n                { props.invalidMessage }\r\n            </div>\r\n            <label htmlFor={ props.id }> { props.children } </label>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport { False } from './constant'\r\n\r\nexport const Submit = (props) => {\r\n    if( props.error === False ){\r\n        return (\r\n            <button id={ props.id } className=\"error-submit btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\"> { props.children } </button>\r\n        )\r\n    } else {\r\n        return (\r\n            <button id={ props.id } className=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\"> { props.children } </button>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport const Loading = (props) => {\r\n    if(props.isLoading){\r\n        return (\r\n            <div className=\"text-center mt-5 mb-5\">\r\n                <div>\r\n                    <i className=\"fas fa-sync fa-7x\" id=\"loading\"></i>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    Carregando\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return props.children\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport Modal from '../../shared/modal/modal'\r\nimport { isPassword, isRga } from '../../utils/auth'\r\n\r\nimport { True, False, Void, InitialInput } from '../constant'\r\nimport { Input } from '../input'\r\nimport { Submit } from '../submit'\r\nimport { Loading } from '../loading'\r\n\r\nexport default class Login extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            isLoading: False,\r\n            isRga: Void,\r\n            isPassword: Void,\r\n            rga: InitialInput,\r\n            password: InitialInput\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.rgaChange = this.rgaChange.bind(this)\r\n        this.passwordChange = this.passwordChange.bind(this)\r\n        this.LoadingOn = this.LoadingOn.bind(this)\r\n        this.LoadingOff = this.LoadingOff.bind(this)\r\n    } \r\n\r\n    rgaChange(event){\r\n        var rga = event.target.value\r\n        this.setState({\r\n            rga: rga,\r\n            isRga: isRga(rga)\r\n        });\r\n    }\r\n\r\n    passwordChange(event){\r\n        var password = event.target.value\r\n        this.setState({\r\n            password: password,\r\n            isPassword: isPassword(password)\r\n        });\r\n    }\r\n\r\n    LoadingOn(){\r\n        this.setState({\r\n            isLoading: True\r\n        })\r\n    }\r\n\r\n    LoadingOff(){\r\n        this.setState({\r\n            isLoading: False\r\n        })\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault()\r\n\r\n        this.LoadingOn()\r\n\r\n        console.log('baatata')\r\n\r\n        setTimeout( this.LoadingOff , 3000);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Modal id=\"login\"> \r\n                <h3 className=\"login-heading mb-4\">Login</h3>\r\n                <form onSubmit={ this.handleSubmit }>\r\n\r\n                    <Loading isLoading={ this.state.isLoading }>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"rgaLogin\"\r\n                            placeholder=\"RGA\"\r\n                            onChange={ this.rgaChange }\r\n                            isValid={ this.state.isRga }\r\n                            invalidMessage=\"Insira um rga válido\"\r\n                        >\r\n                            RGA\r\n                        </Input>\r\n                        <Input\r\n                            type=\"password\"\r\n                            id=\"passwordLogin\"\r\n                            placeholder=\"Password\"\r\n                            onChange={ this.passwordChange }\r\n                            isValid={ this.state.isPassword }\r\n                            invalidMessage=\"Insira uma senha com no mínimo 8 caracteres\"\r\n                        >\r\n                            Senha\r\n                        </Input>\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Submit id=\"idLogin\"> Login </Submit>\r\n                    </Loading>\r\n\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport { False, True, Null } from './constant'\r\n\r\nexport const Error = (props) => {\r\n    if(props.isSuccess === False){\r\n        return <span className=\"badge badge-danger\"> { props.message } </span>\r\n    } else {\r\n        if(props.isSuccess === True) return <span className=\"badge badge-success\"> { props.message } </span>\r\n    }\r\n    return Null\r\n}","import firebase from 'firebase';\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyDUiBlfUjdsVpsl2GjZi9B9Evn2lIs1lqo\",\r\n    authDomain: \"pet-event.firebaseapp.com\",\r\n    databaseURL: \"https://pet-event.firebaseio.com\",\r\n    projectId: \"pet-event\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"61527628241\"\r\n};\r\n\r\nexport const firebaseImpl = firebase.initializeApp(config);\r\nexport const firebaseDatabase = firebase.database();","import {firebaseDatabase} from '../utils/firebaseUtils'\r\n\r\nexport default class FirebaseService {\r\n\r\n    static getOneData = async (path, id) => {\r\n        const query = firebaseDatabase.ref(path).child(id)\r\n\r\n        const snapshot = await query.once('value')\r\n        const value = snapshot.val()\r\n\r\n        return value\r\n    }\r\n\r\n    static listenIfChildAdded = (path, id, callback) => {\r\n        const query = firebaseDatabase.ref(path).child(id)\r\n\r\n        query.on(\"child_added\", callback);\r\n    }\r\n\r\n    static insertData = (path, id, form) => {\r\n        try {\r\n            const query = firebaseDatabase.ref(path).child(id)\r\n            query.set(form)\r\n            return true\r\n        } catch (error) {\r\n            return false\r\n        }\r\n    }\r\n\r\n}","const apiSendGridKey = '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'\r\n\r\nconst sgMail = require('@sendgrid/mail');\r\n\r\nexport const sendEmail = (email, password) => {\r\n    sgMail.setApiKey(apiSendGridKey);\r\n    const msg = {\r\n        to: email,\r\n        from: 'alan.castro@aluno.ufms.br',\r\n        subject: 'Inscrição realizada com sucesso.',\r\n        text: 'Inscrição realizada com sucesso. A sua senha é o seu rga, mude o quando entrar na plataforma. Acesse esse link para conseguir seu codigo: https://chart.googleapis.com/chart?cht=qr&chl='+password+'&chs=180x180&choe=UTF-8&chld=L|2',\r\n        html: `\r\n            <div>\r\n            <h1>Inscrição realizada com sucesso</h1>\r\n            <br/>\r\n            <strong>A sua senha é o seu rga, mude o quando entrar na plataforma</strong>\r\n            <br/>\r\n            <p> Código </p>\r\n            <img src=\"https://chart.googleapis.com/chart?cht=qr&chl=`+password+`&chs=180x180&choe=UTF-8&chld=L|2\" alt=\"\">\r\n            </div>\r\n        `,\r\n    };\r\n    sgMail.send(msg);\r\n}\r\n\r\n","import FirebaseService from '../services/firebaseService'\r\nimport { False } from './constant'\r\nimport md5 from 'md5'\r\nimport { sendEmail } from '../utils/email'\r\n\r\nexport const doLogin = ( form ) => {\r\n    console.log( form )\r\n}\r\n\r\nexport const doInscription = async ( form ) => {\r\n    let user = await FirebaseService.getOneData('users', form.rga)\r\n    if( user ){\r\n        let error = { isSuccess: False, message: 'RGA já cadastrado'}\r\n        return error\r\n    }\r\n    let isSuccess = await FirebaseService.insertData('users', form.rga, { ...form, password: md5(form.rga) })\r\n    let success = { isSuccess: isSuccess, message: 'Cadastrado com successo.'}\r\n\r\n    sendEmail( form.email, form.rga )\r\n\r\n    return success\r\n}","import React from 'react'\r\n\r\nexport const Select = (props) => {\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"group\"> { props.name } </label>\r\n            <div className=\"form-label-group rounded\">\r\n                <select name={ props.id } className=\"form-control\" value={ props.value } onChange={ props.onChange } id={ props.id }>\r\n                    { props.children }\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Option = (props) => {\r\n    return (\r\n        <option { ...props }> { props.children } </option>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Textarea = (props) => {\r\n    return (\r\n        <div>\r\n            <label htmlFor={ props.id } className=\"mt-3\"> { props.name } </label>\r\n            <div className=\"form-label-group\">\r\n                <textarea \r\n                    name={ props.id }\r\n                    className=\"form-control\" \r\n                    id={ props.id } \r\n                    rows=\"3\" \r\n                    onChange={ props.onChange } \r\n                    value={ props.value }\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\n\r\nimport Modal from '../../shared/modal/modal'\r\nimport { Error } from '../error'\r\nimport { isNothing, isRga, isEmail, checkForm } from '../../utils/auth'\r\nimport { doInscription } from '../auth'\r\n\r\nimport { True, False, Void, InitialInput } from '../constant'\r\nimport { Input } from '../input'\r\nimport { Submit } from '../submit'\r\nimport { Loading } from '../loading'\r\nimport { Select, Option } from '../select'\r\nimport { Textarea } from '../textarea'\r\n\r\nexport default class Login extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            isLoading: False,\r\n            isSuccessSubmit: Void,\r\n            inscriptionState: {\r\n                isSuccess: Void,\r\n                message: InitialInput\r\n            },\r\n\r\n            is:{\r\n                isRga: Void,\r\n                isName: Void,\r\n                isEmail: Void,\r\n                isCourse: Void,\r\n                isContact: Void,\r\n                isEmergencyContact: Void\r\n            },\r\n\r\n            form: {\r\n                rga: InitialInput,\r\n                name: InitialInput,\r\n                email: InitialInput,\r\n                course: InitialInput,\r\n                contact: InitialInput,\r\n                emergencyContact: InitialInput,\r\n                group: 'Três Lagoas - Conexões de Saberes Matemáticos',\r\n                gender: 'Feminino',\r\n                ethnicity: 'Branco',\r\n                arrivalDate: '22/03/2018',\r\n                departureDate: '23/03/2018',\r\n                allergy: '',\r\n                deficiency: ''\r\n            }\r\n        }\r\n\r\n        this.rgaChange = this.rgaChange.bind(this)\r\n        this.nameChange = this.nameChange.bind(this)\r\n        this.emailChange = this.emailChange.bind(this)\r\n        this.courseChange = this.courseChange.bind(this)\r\n        this.contactChange = this.contactChange.bind(this)\r\n        this.emergencyContactChange = this.emergencyContactChange.bind(this)\r\n        this.inputChange = this.inputChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        \r\n        this.LoadingOn = this.LoadingOn.bind(this)\r\n        this.LoadingOff = this.LoadingOff.bind(this)\r\n        this.submitError = this.submitError.bind(this)\r\n        this.submitDefault = this.submitDefault.bind(this)\r\n    }\r\n\r\n    inputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n            form: { ...this.state.form, [name]: value },\r\n        });\r\n    }\r\n\r\n    rgaChange(event){\r\n        var rga = event.target.value\r\n        this.setState({\r\n            form: { ...this.state.form, rga: rga },\r\n            is: { ...this.state.is, isRga: isRga(rga) }\r\n        });\r\n    }\r\n\r\n    emailChange(event){\r\n        var email = event.target.value\r\n        this.setState({\r\n            form: { ...this.state.form, email: email },\r\n            is: { ...this.state.is, isEmail: isEmail(email) }\r\n        });\r\n    }\r\n\r\n    nameChange(event){\r\n        var name = event.target.value\r\n        this.setState({\r\n            form: { ...this.state.form, name: name },\r\n            is: { ...this.state.is, isName: !isNothing(name) }\r\n        });\r\n    }\r\n\r\n    courseChange(event){\r\n        var course = event.target.value\r\n        this.setState({\r\n            form: { ...this.state.form, course: course },\r\n            is: { ...this.state.is, isCourse: !isNothing(course) }\r\n        });\r\n    }\r\n\r\n    contactChange(event){\r\n        var contact = event.target.value\r\n        this.setState({\r\n            form: { ...this.state.form, contact: contact },\r\n            is: { ...this.state.is, isContact: !isNothing(contact) }\r\n        });\r\n    }\r\n\r\n    emergencyContactChange(event){\r\n        var emergencyContact = event.target.value\r\n        this.setState({\r\n            form: { ...this.state.form, emergencyContact: emergencyContact },\r\n            is: { ...this.state.is, isEmergencyContact: !isNothing(emergencyContact) }\r\n        });\r\n    }\r\n\r\n    LoadingOn(){\r\n        this.setState({\r\n            isLoading: True\r\n        })\r\n    }\r\n\r\n    LoadingOff(){\r\n        this.setState({\r\n            isLoading: False\r\n        })\r\n    }\r\n\r\n    submitError(){\r\n        this.setState({\r\n            isSuccessSubmit: False\r\n        })\r\n    }\r\n\r\n    submitDefault(){\r\n        this.setState({\r\n            isSuccessSubmit: Void\r\n        })\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        event.preventDefault()\r\n        if( !checkForm( this.state.is ) ){\r\n            this.submitError()\r\n            setTimeout( this.submitDefault, 2000)\r\n        } else {\r\n            this.LoadingOn()\r\n\r\n            let doInscriptionResponse = await doInscription( this.state.form )\r\n            this.setState({\r\n                inscriptionState: doInscriptionResponse\r\n            })\r\n\r\n            setTimeout( this.LoadingOff, 2000)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Modal id=\"register\"> \r\n                <Loading isLoading={ this.state.isLoading }>\r\n                    <h3 className=\"login-heading mb-4\">Inscreva-se no evento</h3>\r\n                    <form onSubmit={ this.handleSubmit }>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"nameInscription\"\r\n                            placeholder=\"Nome\"\r\n                            onChange={ this.nameChange }\r\n                            isValid={ this.state.is.isName }\r\n                            value={ this.state.form.name }\r\n                            invalidMessage=\"Insira um nome\"\r\n                        >\r\n                            Nome\r\n                        </Input>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"rgaInscription\"\r\n                            placeholder=\"RGA\"\r\n                            onChange={ this.rgaChange }\r\n                            isValid={ this.state.is.isRga }\r\n                            value={ this.state.form.rga }\r\n                            invalidMessage=\"Insira um rga válido\"\r\n                        >\r\n                            RGA\r\n                        </Input>\r\n                        <Input\r\n                            type=\"email\"\r\n                            id=\"emailInscription\"\r\n                            placeholder=\"Email\"\r\n                            onChange={ this.emailChange }\r\n                            isValid={ this.state.is.isEmail }\r\n                            value={ this.state.form.email }\r\n                            invalidMessage=\"Insira um email válido\"\r\n                        >\r\n                            Email\r\n                        </Input>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"courseInscription\"\r\n                            placeholder=\"Curso\"\r\n                            onChange={ this.courseChange }\r\n                            isValid={ this.state.is.isCourse }\r\n                            value={ this.state.form.course }\r\n                            invalidMessage=\"Insira um curso\"\r\n                        >\r\n                            Curso\r\n                        </Input>\r\n\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Select name=\"Grupo\" id=\"group\" value={ this.state.form.group } onChange={ this.inputChange }>\r\n                            <Option>Três Lagoas - Conexões de Saberes Matemáticos</Option>\r\n                            <Option>Três Lagoas - Geografia</Option>\r\n                            <Option>Três Lagoas - Enfermagem</Option>\r\n                            <Option>Três Lagoas - História</Option>\r\n                            <Option>Três Lagoas - Matemática</Option>\r\n\r\n                            <Option>Chapadão do Sul - Agronomia e Engenharia Florestal</Option>\r\n\r\n                            <Option>Campo Grande - Farmácia</Option>\r\n                            <Option>Campo Grande - Zootecnia</Option>\r\n                            <Option>Campo Grande - Química</Option>\r\n                            <Option>Campo Grande - Educação Física</Option>\r\n                            <Option>Campo Grande - Engenharia Elétrica</Option>\r\n                            <Option>Campo Grande - Materiais</Option>\r\n                            <Option>Campo Grande - Ciência da Computação</Option>\r\n                            <Option>Campo Grande - Sistemas</Option>\r\n\r\n                            <Option>Ponta Porã - Fronteira</Option>\r\n                            <Option>Ponta Porã - Conexões de Saberes Matemática</Option>\r\n\r\n                            <Option>Naviral - Pedagogia e Ciência Sociais</Option>\r\n                        </Select>\r\n                        <Select name=\"Sexo\" id=\"gender\" value={ this.state.form.gender } onChange={ this.inputChange }>\r\n                            <Option>Feminino</Option>\r\n                            <Option>Masculino</Option>\r\n                        </Select>\r\n                        <Select name=\"Etnia\" id=\"ethnicity\" value={ this.state.form.ethnicity } onChange={ this.inputChange }>\r\n                            <Option>Branco</Option>\r\n                            <Option>Negro</Option>\r\n                            <Option>Indígena</Option>\r\n                            <Option>Pardo</Option>\r\n                            <Option>Caboclo</Option>\r\n                            <Option>Cafuzo</Option>\r\n                        </Select>\r\n                        <Select name=\"Data de Chegada\" id=\"arrivalDate\" value={ this.state.form.arrivalDate } onChange={ this.inputChange }>\r\n                            <Option>22/03/2018</Option>\r\n                            <Option>23/03/2018</Option>\r\n                        </Select>\r\n                        <Select name=\"Data de Saída\" id=\"departureDate\" value={ this.state.form.departureDate } onChange={ this.inputChange }>\r\n                            <Option>23/03/2018</Option>\r\n                            <Option>24/03/2018</Option>\r\n                        </Select>\r\n\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"contactInscription\"\r\n                            placeholder=\"Contato\"\r\n                            onChange={ this.contactChange }\r\n                            isValid={ this.state.is.isContact }\r\n                            value={ this.state.form.contact }\r\n                            invalidMessage=\"Insira um contato\"\r\n                        >\r\n                            Contato\r\n                        </Input>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"emergencyContactInscription\"\r\n                            placeholder=\"Contato de Emergência\"\r\n                            onChange={ this.emergencyContactChange }\r\n                            isValid={ this.state.is.isEmergencyContact }\r\n                            value={ this.state.form.emergencyContact }\r\n                            invalidMessage=\"Insira um contato de emergência\"\r\n                        >\r\n                            Contato de Emergência\r\n                        </Input>\r\n\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Textarea id=\"allergy\" name=\"Intolerância/Alergia\" onChange={ this.inputChange } value={ this.state.form.allergy }/>\r\n                        <Textarea id=\"deficiency\" name=\"Deficiência\" onChange={ this.inputChange } value={ this.state.form.deficiency }/>\r\n\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Error { ...this.state.inscriptionState }/>\r\n                        <Submit error={ this.state.isSuccessSubmit } id=\"idInscription\"> Inscreva-se </Submit>\r\n                    </form>\r\n                </Loading>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport Main from '../shared/container/main'\r\nimport ModalButton from '../shared/modal/button'\r\nimport Markdown from '../shared/markdown'\r\nimport Login from '../auth/login'\r\nimport Inscription from '../auth/inscription'\r\n\r\nexport default class Description extends Component {\r\n\r\n    render(){\r\n        return (\r\n            <Main>\r\n                <div className=\"col-md-7 col-lg-8 bg-white rounded\"> \r\n                    <div className=\"text-right\">\r\n                        <ModalButton target=\"#login\"> Login </ModalButton>\r\n                        <ModalButton target=\"#register\"> Inscreva-se </ModalButton>\r\n                    </div>\r\n                    <Markdown />\r\n                </div>\r\n                <Login />\r\n                <Inscription />\r\n            </Main>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\n\r\nimport Description from '../description'\r\n\r\nclass Router extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      isLoggedIn: false,\r\n      user: {\r\n        name: '',\r\n        id: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/pet-event/\" exact={true} render={ (props) => <Description user={ this.state.user } {...props} /> }/>\r\n                <Route path='*' render={ (props) => <Description user={ this.state.user } {...props} /> }/>\r\n            </Switch>\r\n        </ BrowserRouter>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Router;\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Router from './route/route'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router/>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}