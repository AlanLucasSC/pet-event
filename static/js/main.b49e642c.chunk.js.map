{"version":3,"sources":["components/utils/localStorage.js","components/shared/container/main.jsx","components/shared/modal/button.jsx","components/shared/markdown/index.jsx","components/constant.jsx","components/auth/error.jsx","components/shared/modal/modal.jsx","components/utils/document.js","components/utils/auth.jsx","components/auth/input.jsx","components/auth/submit.jsx","components/shared/loading.jsx","components/utils/firebaseUtils.js","components/services/firebaseService.js","components/utils/email.js","components/auth/auth.js","components/auth/login/index.jsx","components/auth/select.jsx","components/auth/textarea.jsx","components/auth/inscription/index.jsx","components/description/index.jsx","components/activeties/effects.js","components/activeties/list/list.jsx","components/activeties/list/item.jsx","components/activeties/registered.jsx","components/activeties/support.jsx","components/qrCode/show.jsx","components/auth/changePassword/index.jsx","components/qrCode/reader.jsx","components/qrCode/effects.js","components/route/user.jsx","components/route/route.jsx","components/App.js","serviceWorker.js","index.js"],"names":["LoadApplicationState","key","value","localStorage","getItem","JSON","parse","Load","Main","props","react_default","a","createElement","className","children","ModalButton","type","data-toggle","data-target","target","Markdown","False","Void","undefined","Null","InitialInput","Nothing","Error","isSuccess","message","Modal","id","tabIndex","role","aria-labelledby","aria-hidden","concat","data-dismiss","objectToArray","object","Object","values","isEmail","email","test","String","toLowerCase","isPassword","password","isNothing","isRga","length","checkForm","is","index","Input","isValid","inputValidation","isVoid","name","placeholder","onChange","required","validMessage","invalidMessage","htmlFor","Submit","error","Loading","isLoading","firebaseDatabase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","FirebaseService","getOneData","_callee","path","query","_len","child","_key","snapshot","_args","arguments","regenerator_default","wrap","_context","prev","next","ref","Array","forEach","item","once","sent","val","abrupt","stop","listenIfChildAdded","callback","on","insertData","form","_len2","_key2","set","removeData","_len3","_key3","remove","updateData","_len4","_key4","transaction","sendEmail","_ref","asyncToGenerator","mark","response","axios","get","status","t0","_x","_x2","apply","this","doLogin","user","success","rga","md5","data","doInscription","_ref2","_callee2","_context2","objectSpread","changePassword","_ref3","_callee3","_context3","_x3","_x4","Login","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","loginState","handleSubmit","bind","assertThisInitialized","rgaChange","passwordChange","LoadingOn","LoadingOff","closeModal","loginSuccess","event","setState","document","querySelector","click","history","push","preventDefault","setItem","stringify","setTimeout","modal","onSubmit","loading_Loading","input_Input","error_Error","submit_Submit","Component","Select","Option","Textarea","rows","isSuccessSubmit","inscriptionState","isName","isCourse","isContact","isEmergencyContact","course","contact","emergencyContact","group","gender","ethnicity","arrivalDate","departureDate","allergy","deficiency","nameChange","emailChange","courseChange","contactChange","emergencyContactChange","inputChange","submitError","submitDefault","checked","defineProperty","doInscriptionResponse","select_Select","select_Option","textarea_Textarea","Description","console","log","location","pathname","isLoggedIn","main","modal_button","markdown","login_Login","inscription_Login","getActiveties","activeties","getUserActiveties","activityInscription","activity","formInscription","formUser","hasInserted","activityName","inscription","presence","vacancies","removeActivityInscription","_ref4","_callee4","hasRemoved","_context4","_x5","_x6","updateIncrementVacanciesActivity","_ref6","_callee6","_context6","_x8","ListGroup","ListGroupContent","ItemGroup","itemId","contentId","href","aria-controls","title","hasInscription","ItemGroupContent","inscriptionButton","onClick","reload","description","ItemGroupContentSupport","listUsers","users","map","scope","Link","to","match","url","ActivetiesRegistered","renderActivies","myActiveties","_this2","hasActiveties","itemGroup","item_ItemGroup","itemGroupContent","item_ItemGroupContent","list_ListGroup","list_ListGroupContent","ActivetiesSupport","item_ItemGroupContentSupport","ShowQrCode","src","ChangePassword","changePasswordState","newPassword","newPasswordConfirmation","Reader","params","activityType","delay","handleScan","err","lib_default","onError","handleError","onScan","style","width","UserRoute","quit","registered","support","removeItem","aria-expanded","aria-label","Route","exact","render","registered_ActivetiesRegistered","assign","show","changePassword_ChangePassword","_this3","support_ActivetiesSupport","reader_Reader","Redirect","Router","loadData","BrowserRouter","Switch","description_Description","user_UserRoute","App","route","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","src_components_App","getElementById","URL","process","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b49e642c.chunk.js","sourcesContent":["export const Save = (data) => {\r\n    localStorage.setItem(\"state\", JSON.stringify(data))\r\n}\r\n\r\nexport const Load = (key) => {\r\n    var value = localStorage.getItem(key)\r\n    return JSON.parse(value)\r\n}\r\n\r\nexport const LoadApplicationState = () => {\r\n    var key = 'state'\r\n    return Load(key)\r\n}\r\n\r\nexport const RemoveApplicationState = () => {\r\n    var key = 'state'\r\n    localStorage.removeItem(key);\r\n}","import React from 'react'\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <div className=\"container mt-5 mb-5\">\r\n            <div className=\"row justify-content-center\">\r\n                { props.children }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react'\r\n\r\nconst ModalButton = (props) => {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-outline-primary m-2\" data-toggle=\"modal\" data-target={ props.target }>\r\n            { props.children }\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ModalButton","import React from 'react'\r\n\r\nconst Markdown = (props) => {\r\n    return (\r\n        <div className=\"markdown p-3\">\r\n            <h1> <strong>XXI Semana da Matemática – 4 a 7 de dezembro/2018.</strong> </h1>\r\n            <p>\r\n                A <strong>XXI Semana de Matemática</strong> tem como objetivo principal a criação de um ambiente onde estudantes das escolas públicas e privadas, educadores, acadêmicos, professores da universidade e a comunidade em geral possam interagir, trocando experiências profissionais e conhecimentos matemáticos.\r\n            </p>\r\n            <p>\r\n                Nesta edição pretende-se promover o curso de Licenciatura em Matemática da instituição por meio da discussão de assuntos relacionados ao ensino da Matemática, suas tecnologias e a formação de profissionais na área da Licenciatura em Matemática por meio do Programa Institucional de Bolsas de Iniciação a Docência (Pibid) e o Programa de Residência Pedagógica (RP). Procura-se também favorecer a aproximação dos acadêmicos com as escolas da Educação Básica e com professores da disciplina da Matemática.\r\n            </p>\r\n            <p>\r\n                Em sua programação, o evento conta com palestrantes, minicursos, oficinas e exposição de trabalhos desenvolvidos pelos alunos e relacionados com a Matemática e o ensino da Matemática nas escolas de educação básica. O evento deve ser também um momento de socialização e integração entre os acadêmicos do curso de graduação, docentes das universidades, alunos da pós-graduação, alunos e professores de escolas da Educação Básica.\r\n            </p>\r\n            <ul>\r\n                <li> \r\n                    As inscrições poderão ser realizadas até o dia 04/12/2018 na Coordenação do Curso de Matemática (Espaço Multiuso – Sala 1 – Unid. I) ou na Sala H-227 (Unid. I) ou na Sala 5 (Unid. II) com os acadêmicos ANDRESSA BRITTES, Contato: 99929-0565; ARIEL DA SILVA COSTA, Contato: 99830-2296; DANIELLE VELASQUEZ, Contato: 99121-9825; DANIEL SOUZA, Contato: 99695-8925 ou ILMA DANIELLE, Contato: 98437-2330.\r\n                </li>\r\n            \r\n                <li>\r\n                    As inscrições poderão ser realizadas até o dia 04/12/2018 na Coordenação do Curso de Matemática (Espaço Multiuso – Sala 1 – Unid. I) ou na Sala H-227 (Unid. I) ou na Sala 5 (Unid. II) com os acadêmicos ANDRESSA BRITTES, Contato: 99929-0565; ARIEL DA SILVA COSTA, Contato: 99830-2296; DANIELLE VELASQUEZ, Contato: 99121-9825; DANIEL SOUZA, Contato: 99695-8925 ou ILMA DANIELLE, Contato: 98437-2330.\r\n                </li>\r\n                <li>\r\n                    As inscrições poderão ser realizadas até o dia 04/12/2018 na Coordenação do Curso de Matemática (Espaço Multiuso – Sala 1 – Unid. I) ou na Sala H-227 (Unid. I) ou na Sala 5 (Unid. II) com os acadêmicos ANDRESSA BRITTES, Contato: 99929-0565; ARIEL DA SILVA COSTA, Contato: 99830-2296; DANIELLE VELASQUEZ, Contato: 99121-9825; DANIEL SOUZA, Contato: 99695-8925 ou ILMA DANIELLE, Contato: 98437-2330.\r\n                </li>\r\n                <li>\r\n                    As inscrições poderão ser realizadas até o dia 04/12/2018 na Coordenação do Curso de Matemática (Espaço Multiuso – Sala 1 – Unid. I) ou na Sala H-227 (Unid. I) ou na Sala 5 (Unid. II) com os acadêmicos ANDRESSA BRITTES, Contato: 99929-0565; ARIEL DA SILVA COSTA, Contato: 99830-2296; DANIELLE VELASQUEZ, Contato: 99121-9825; DANIEL SOUZA, Contato: 99695-8925 ou ILMA DANIELLE, Contato: 98437-2330.\r\n                </li>\r\n                <li>\r\n                    As inscrições poderão ser realizadas até o dia 04/12/2018 na Coordenação do Curso de Matemática (Espaço Multiuso – Sala 1 – Unid. I) ou na Sala H-227 (Unid. I) ou na Sala 5 (Unid. II) com os acadêmicos ANDRESSA BRITTES, Contato: 99929-0565; ARIEL DA SILVA COSTA, Contato: 99830-2296; DANIELLE VELASQUEZ, Contato: 99121-9825; DANIEL SOUZA, Contato: 99695-8925 ou ILMA DANIELLE, Contato: 98437-2330.\r\n                </li>\r\n                <li>\r\n                    As inscrições poderão ser realizadas até o dia 04/12/2018 na Coordenação do Curso de Matemática (Espaço Multiuso – Sala 1 – Unid. I) ou na Sala H-227 (Unid. I) ou na Sala 5 (Unid. II) com os acadêmicos ANDRESSA BRITTES, Contato: 99929-0565; ARIEL DA SILVA COSTA, Contato: 99830-2296; DANIELLE VELASQUEZ, Contato: 99121-9825; DANIEL SOUZA, Contato: 99695-8925 ou ILMA DANIELLE, Contato: 98437-2330.\r\n                </li>\r\n            </ul>\r\n            <h2> <strong> DATA: 06/12/2018 – QUINTA-FEIRA </strong> </h2>\r\n            <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                    <th>HORÁRIO</th>\r\n                    <th>ATIVIDADE</th>\r\n                    <th>CONVIDADOS</th>\r\n                    <th>LOCAL</th>\r\n                    <th>VAGAS</th>\r\n                    <th>CH</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                    <td>10h – 12h 14h – 16h</td>\r\n                    <td>Credenciamento</td>\r\n                    <td>–</td>\r\n                    <td>Corredor H-108 (Unid. I)</td>\r\n                    <td>–</td>\r\n                    <td>4 h</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Markdown","export const True = true\r\nexport const False = false\r\nexport const Void = undefined\r\nexport const Null = null\r\nexport const InitialInput = ''\r\nexport const Invalid = 'is-invalid'\r\nexport const Valid = 'is-valid'\r\nexport const Nothing = ''","import React from 'react'\r\n\r\nimport { False, True, Null } from '../constant'\r\n\r\nexport const Error = (props) => {\r\n    if(props.isSuccess === False){\r\n        return <span className=\"badge badge-danger\"> { props.message } </span>\r\n    } else {\r\n        if(props.isSuccess === True) return <span className=\"badge badge-success\"> { props.message } </span>\r\n    }\r\n    return Null\r\n}","import React from 'react'\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <div className=\"modal fade\" id={ props.id } tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog bg-white rounded\" role=\"document\">\r\n                <div className=\"modal-content login d-flex py-5\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-9 col-lg-9 mx-auto\">\r\n                                { props.children }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button id={ `close${ props.id }` } type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Fechar</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal","export const hasChanges = (changes) => {\r\n    return changes.length === 0 ? true : false\r\n}\r\n\r\nexport const INITIAL_STATE = {\r\n    databaseDocument: '',\r\n    userDocument: '',\r\n    changes: [],\r\n    user: ''\r\n}\r\n\r\nexport const getElementOnArrayInReverse = (array, index) => {\r\n    var reverseArray = array.reverse()\r\n    return reverseArray[ index ]\r\n}\r\n\r\nexport const objectToArray = ( object ) => {\r\n    return Object.values( object )\r\n}\r\n\r\nexport const isoDateToShortDateWithHours = (dateObject) => {\r\n    let date = new Date( String( dateObject ) )\r\n    let dateShortFormat = date.getDay() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear()\r\n    let hours = date.getHours() + ':' + date.getMinutes()\r\n    return dateShortFormat + ' ' + hours\r\n}\r\n\r\nexport const redirectTo = (route) => {\r\n    window.location.replace(route)\r\n}","import { True, False, Void, Nothing } from '../constant'\r\nimport { objectToArray } from './document'\r\n\r\nexport const isEmail = (email) => {\r\n    var validEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return validEmail.test(String(email).toLowerCase());\r\n}\r\n\r\nexport const isPassword = (password) => {\r\n    var validPassword = /\\w{8,}/;\r\n    return validPassword.test(String(password));\r\n}\r\n\r\nexport const isVoid = (value) => {\r\n    return value === Void ? True : False\r\n}\r\n\r\nexport const isNothing = (value) => {\r\n    return value === Nothing ? True : False\r\n}\r\n\r\nexport const isRga = (value) => {\r\n    var rgaLength = 12\r\n    return value.length === rgaLength ? True : False\r\n}\r\n\r\nexport const checkForm = ( is ) => {\r\n    is = objectToArray( is )\r\n    for(var index = 0; index < is.length; index++){\r\n        var element = is[index]\r\n        if( element !== True ){\r\n            return false\r\n        }\r\n    }\r\n    return true\r\n}","import React from 'react'\r\n\r\nimport { True, False, Valid, Invalid, Nothing } from '../constant'\r\nimport { isVoid } from '../utils/auth'\r\n\r\nconst validation = (value) => {\r\n    return value ? True : False\r\n}\r\n\r\nexport const Input = (props) => {\r\n    var isValid = props.isValid\r\n    var inputValidation = validation(isValid) ? Valid : Invalid\r\n        inputValidation = !isVoid(isValid) ? inputValidation : Nothing\r\n\r\n    return (\r\n        <div className=\"form-label-group\">\r\n            <input \r\n                type={ props.type } \r\n                id={ props.id } \r\n                name={ props.id }\r\n                className={ \"form-control \" + inputValidation } \r\n                placeholder={ props.placeholder } \r\n                onChange={ props.onChange }\r\n                value={ props.value }\r\n                required\r\n            />\r\n            <div className=\"text-center valid-feedback\">\r\n                { props.validMessage }\r\n            </div>\r\n            <div className=\"text-center invalid-feedback\">\r\n                { props.invalidMessage }\r\n            </div>\r\n            <label htmlFor={ props.id }> { props.children } </label>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport { False } from '../constant'\r\n\r\nexport const Submit = (props) => {\r\n    if( props.error === False ){\r\n        return (\r\n            <button id={ props.id } className=\"error-submit btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\"> { props.children } </button>\r\n        )\r\n    } else {\r\n        return (\r\n            <button id={ props.id } className=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\"> { props.children } </button>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport const Loading = (props) => {\r\n    if(props.isLoading){\r\n        return (\r\n            <div className=\"text-center mt-5 mb-5\">\r\n                <div>\r\n                    <i className=\"fas fa-sync fa-7x\" id=\"loading\"></i>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    Carregando\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return props.children\r\n    }\r\n}","import firebase from 'firebase';\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyDUiBlfUjdsVpsl2GjZi9B9Evn2lIs1lqo\",\r\n    authDomain: \"pet-event.firebaseapp.com\",\r\n    databaseURL: \"https://pet-event.firebaseio.com\",\r\n    projectId: \"pet-event\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"61527628241\"\r\n};\r\n\r\nexport const firebaseImpl = firebase.initializeApp(config);\r\nexport const firebaseDatabase = firebase.database();","import {firebaseDatabase} from '../utils/firebaseUtils'\r\n\r\nexport default class FirebaseService {\r\n\r\n    static getOneData = async (path, ...child) => {\r\n\r\n        var query = firebaseDatabase.ref(path)\r\n\r\n        if(child.length !== 0)\r\n            child.forEach((item) => {\r\n                query = query.child(item)\r\n            })\r\n\r\n        const snapshot = await query.once('value')\r\n        const value = snapshot.val()\r\n\r\n        return value\r\n    }\r\n\r\n    static listenIfChildAdded = (path, id, callback) => {\r\n        const query = firebaseDatabase.ref(path).child(id)\r\n\r\n        query.on(\"child_added\", callback);\r\n    }\r\n\r\n    static insertData = (form, path, ...child) => {\r\n        try {\r\n            var query = firebaseDatabase.ref(path)\r\n\r\n            if(child.length !== 0)\r\n                child.forEach((item) => {\r\n                    query = query.child(item)\r\n                })\r\n\r\n            query.set(form)\r\n            return true\r\n        } catch (error) {\r\n            return error\r\n        }\r\n    }\r\n\r\n    static removeData = (path, ...child) => {\r\n        try {\r\n            var query = firebaseDatabase.ref(path)\r\n\r\n            if(child.length !== 0)\r\n                child.forEach((item) => {\r\n                    query = query.child(item)\r\n                })\r\n\r\n            query.remove()\r\n            return true\r\n        } catch (error) {\r\n            return error\r\n        }\r\n    }\r\n\r\n    static updateData = (callback, path, ...child) => {\r\n        try {\r\n            var query = firebaseDatabase.ref(path)\r\n\r\n            if(child.length !== 0)\r\n                child.forEach((item) => {\r\n                    query = query.child(item)\r\n                })\r\n\r\n            query.transaction(callback)\r\n            return true\r\n        } catch (error) {\r\n            return error\r\n        }\r\n    }\r\n\r\n}","import axios from 'axios'\r\nexport const sendEmail = async (email, password) => {\r\n    try {\r\n        const response = await axios.get(`https://ladesp-api-test.herokuapp.com/api/email/v0/pet/${email}/${password}`);\r\n        return response.status\r\n    } catch (error) {\r\n        return error\r\n    }\r\n}\r\n\r\n","import FirebaseService from '../services/firebaseService'\r\nimport { False, True } from '../constant'\r\nimport md5 from 'md5'\r\nimport { sendEmail } from '../utils/email'\r\n\r\nexport const doLogin = async ( form ) => {\r\n    let user = await FirebaseService.getOneData('users', form.rga)\r\n    if( !user || user.password !== md5(form.password) ){\r\n        let error = { isSuccess: False, message: 'Email ou Password não válido'}\r\n        return error\r\n    }\r\n    let success = {\r\n        isSuccess: True,\r\n        data: user\r\n    }\r\n    return success\r\n}\r\n\r\nexport const doInscription = async ( form ) => {\r\n    let user = await FirebaseService.getOneData('users', form.rga)\r\n    if( user ){\r\n        let error = { isSuccess: False, message: 'RGA já cadastrado'}\r\n        return error\r\n    }\r\n    let isSuccess = await FirebaseService.insertData({ ...form, password: md5(form.rga) }, 'users', form.rga)\r\n    let success = { isSuccess: isSuccess, message: 'Cadastrado com successo.'}\r\n\r\n    sendEmail( form.email, form.rga )\r\n\r\n    return success\r\n}\r\n\r\nexport const changePassword = async ( password, rga ) => {\r\n    try {\r\n        FirebaseService.updateData((user) => {\r\n            if(user){\r\n                user.password = md5(password)\r\n            }\r\n            return user\r\n        }, 'users', rga)\r\n\r\n        return true\r\n    } catch (error) {\r\n        return false\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { Error } from '../error'\r\nimport Modal from '../../shared/modal/modal'\r\nimport { isPassword, isRga } from '../../utils/auth'\r\n\r\nimport { True, False, Void, InitialInput } from '../../constant'\r\nimport { Input } from '../input'\r\nimport { Submit } from '../submit'\r\nimport { Loading } from '../../shared/loading'\r\nimport { doLogin } from '../auth'\r\nimport { Save } from '../../utils/localStorage'\r\n\r\nexport default class Login extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            loginState: {\r\n                isSuccess: Void,\r\n                message: InitialInput\r\n            },\r\n            isLoading: False,\r\n            isRga: Void,\r\n            isPassword: Void,\r\n            rga: InitialInput,\r\n            password: InitialInput,\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.rgaChange = this.rgaChange.bind(this)\r\n        this.passwordChange = this.passwordChange.bind(this)\r\n        this.LoadingOn = this.LoadingOn.bind(this)\r\n        this.LoadingOff = this.LoadingOff.bind(this)\r\n        this.closeModal = this.closeModal.bind(this)\r\n        this.loginSuccess = this.loginSuccess.bind(this)\r\n    } \r\n\r\n    rgaChange(event){\r\n        var rga = event.target.value\r\n        this.setState({\r\n            rga: rga,\r\n            isRga: isRga(rga)\r\n        });\r\n    }\r\n\r\n    passwordChange(event){\r\n        var password = event.target.value\r\n        this.setState({\r\n            password: password,\r\n            isPassword: isPassword(password)\r\n        });\r\n    }\r\n\r\n    LoadingOn(){\r\n        this.setState({\r\n            isLoading: True\r\n        })\r\n    }\r\n\r\n    LoadingOff(){\r\n        this.setState({\r\n            isLoading: False\r\n        })\r\n    }\r\n\r\n    closeModal(){\r\n        var buttonClose = document.querySelector('#closelogin')\r\n        buttonClose.click()\r\n    }\r\n\r\n    loginSuccess(){\r\n        this.props.history.push('users')\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        event.preventDefault()\r\n\r\n        this.LoadingOn()\r\n\r\n        var loginState = await doLogin({\r\n            rga: this.state.rga,\r\n            password: this.state.password\r\n        })\r\n\r\n        if(!loginState.isSuccess){\r\n            this.setState({\r\n                loginState: loginState,\r\n                isRga: Void,\r\n                isPassword: Void,\r\n            })\r\n        } else {\r\n            Save(loginState.data)\r\n            this.closeModal()\r\n            setTimeout( this.loginSuccess , 1000);\r\n            \r\n        }\r\n\r\n        setTimeout( this.LoadingOff , 3000);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Modal id=\"login\"> \r\n                <h3 className=\"login-heading mb-4\">Login</h3>\r\n                <form onSubmit={ this.handleSubmit }>\r\n\r\n                    <Loading isLoading={ this.state.isLoading }>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"rgaLogin\"\r\n                            placeholder=\"RGA\"\r\n                            onChange={ this.rgaChange }\r\n                            isValid={ this.state.isRga }\r\n                            invalidMessage=\"Insira um rga válido\"\r\n                        >\r\n                            RGA\r\n                        </Input>\r\n                        <Input\r\n                            type=\"password\"\r\n                            id=\"passwordLogin\"\r\n                            placeholder=\"Password\"\r\n                            onChange={ this.passwordChange }\r\n                            isValid={ this.state.isPassword }\r\n                            invalidMessage=\"Insira uma senha com no mínimo 8 caracteres\"\r\n                        >\r\n                            Senha\r\n                        </Input>\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Error { ...this.state.loginState }/>\r\n                        <Submit id=\"idLogin\"> Login </Submit>\r\n                    </Loading>\r\n\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport const Select = (props) => {\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"group\"> { props.name } </label>\r\n            <div className=\"form-label-group rounded\">\r\n                <select name={ props.id } className=\"form-control\" value={ props.value } onChange={ props.onChange } id={ props.id }>\r\n                    { props.children }\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Option = (props) => {\r\n    return (\r\n        <option { ...props }> { props.children } </option>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Textarea = (props) => {\r\n    return (\r\n        <div>\r\n            <label htmlFor={ props.id } className=\"mt-3\"> { props.name } </label>\r\n            <div className=\"form-label-group\">\r\n                <textarea \r\n                    name={ props.id }\r\n                    className=\"form-control\" \r\n                    id={ props.id } \r\n                    rows=\"3\" \r\n                    onChange={ props.onChange } \r\n                    value={ props.value }\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\n\r\nimport Modal from '../../shared/modal/modal'\r\nimport { Error } from '../error'\r\nimport { isNothing, isRga, isEmail, checkForm } from '../../utils/auth'\r\nimport { doInscription } from '../auth'\r\n\r\nimport { True, False, Void, InitialInput } from '../../constant'\r\nimport { Input } from '../input'\r\nimport { Submit } from '../submit'\r\nimport { Loading } from '../../shared/loading'\r\nimport { Select, Option } from '../select'\r\nimport { Textarea } from '../textarea'\r\n\r\nexport default class Login extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            isLoading: False,\r\n            isSuccessSubmit: Void,\r\n            inscriptionState: {\r\n                isSuccess: Void,\r\n                message: InitialInput\r\n            },\r\n\r\n            is:{\r\n                isRga: Void,\r\n                isName: Void,\r\n                isEmail: Void,\r\n                isCourse: Void,\r\n                isContact: Void,\r\n                isEmergencyContact: Void\r\n            },\r\n\r\n            form: {\r\n                rga: InitialInput,\r\n                name: InitialInput,\r\n                email: InitialInput,\r\n                course: InitialInput,\r\n                contact: InitialInput,\r\n                emergencyContact: InitialInput,\r\n                group: 'Três Lagoas - Conexões de Saberes Matemáticos',\r\n                gender: 'Feminino',\r\n                ethnicity: 'Branco',\r\n                arrivalDate: '22/03/2018',\r\n                departureDate: '23/03/2018',\r\n                allergy: '',\r\n                deficiency: ''\r\n            }\r\n        }\r\n\r\n        this.rgaChange = this.rgaChange.bind(this)\r\n        this.nameChange = this.nameChange.bind(this)\r\n        this.emailChange = this.emailChange.bind(this)\r\n        this.courseChange = this.courseChange.bind(this)\r\n        this.contactChange = this.contactChange.bind(this)\r\n        this.emergencyContactChange = this.emergencyContactChange.bind(this)\r\n        this.inputChange = this.inputChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        \r\n        this.LoadingOn = this.LoadingOn.bind(this)\r\n        this.LoadingOff = this.LoadingOff.bind(this)\r\n        this.submitError = this.submitError.bind(this)\r\n        this.submitDefault = this.submitDefault.bind(this)\r\n    }\r\n\r\n    inputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n            form: { ...this.state.form, [name]: value },\r\n        });\r\n    }\r\n\r\n    rgaChange(event){\r\n        var rga = event.target.value\r\n        this.setState({\r\n            form: { ...this.state.form, rga: rga },\r\n            is: { ...this.state.is, isRga: isRga(rga) }\r\n        });\r\n    }\r\n\r\n    emailChange(event){\r\n        var email = event.target.value\r\n        this.setState({\r\n            form: { ...this.state.form, email: email },\r\n            is: { ...this.state.is, isEmail: isEmail(email) }\r\n        });\r\n    }\r\n\r\n    nameChange(event){\r\n        var name = event.target.value\r\n        this.setState({\r\n            form: { ...this.state.form, name: name },\r\n            is: { ...this.state.is, isName: !isNothing(name) }\r\n        });\r\n    }\r\n\r\n    courseChange(event){\r\n        var course = event.target.value\r\n        this.setState({\r\n            form: { ...this.state.form, course: course },\r\n            is: { ...this.state.is, isCourse: !isNothing(course) }\r\n        });\r\n    }\r\n\r\n    contactChange(event){\r\n        var contact = event.target.value\r\n        this.setState({\r\n            form: { ...this.state.form, contact: contact },\r\n            is: { ...this.state.is, isContact: !isNothing(contact) }\r\n        });\r\n    }\r\n\r\n    emergencyContactChange(event){\r\n        var emergencyContact = event.target.value\r\n        this.setState({\r\n            form: { ...this.state.form, emergencyContact: emergencyContact },\r\n            is: { ...this.state.is, isEmergencyContact: !isNothing(emergencyContact) }\r\n        });\r\n    }\r\n\r\n    LoadingOn(){\r\n        this.setState({\r\n            isLoading: True\r\n        })\r\n    }\r\n\r\n    LoadingOff(){\r\n        this.setState({\r\n            isLoading: False\r\n        })\r\n    }\r\n\r\n    submitError(){\r\n        this.setState({\r\n            isSuccessSubmit: False\r\n        })\r\n    }\r\n\r\n    submitDefault(){\r\n        this.setState({\r\n            isSuccessSubmit: Void\r\n        })\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        event.preventDefault()\r\n        if( !checkForm( this.state.is ) ){\r\n            this.submitError()\r\n            setTimeout( this.submitDefault, 2000)\r\n        } else {\r\n            this.LoadingOn()\r\n\r\n            let doInscriptionResponse = await doInscription( this.state.form )\r\n            this.setState({\r\n                inscriptionState: doInscriptionResponse\r\n            })\r\n\r\n            setTimeout( this.LoadingOff, 2000)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Modal id=\"register\"> \r\n                <Loading isLoading={ this.state.isLoading }>\r\n                    <h3 className=\"login-heading mb-4\">Inscreva-se no evento</h3>\r\n                    <form onSubmit={ this.handleSubmit }>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"nameInscription\"\r\n                            placeholder=\"Nome\"\r\n                            onChange={ this.nameChange }\r\n                            isValid={ this.state.is.isName }\r\n                            value={ this.state.form.name }\r\n                            invalidMessage=\"Insira um nome\"\r\n                        >\r\n                            Nome\r\n                        </Input>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"rgaInscription\"\r\n                            placeholder=\"RGA\"\r\n                            onChange={ this.rgaChange }\r\n                            isValid={ this.state.is.isRga }\r\n                            value={ this.state.form.rga }\r\n                            invalidMessage=\"Insira um rga válido\"\r\n                        >\r\n                            RGA\r\n                        </Input>\r\n                        <Input\r\n                            type=\"email\"\r\n                            id=\"emailInscription\"\r\n                            placeholder=\"Email\"\r\n                            onChange={ this.emailChange }\r\n                            isValid={ this.state.is.isEmail }\r\n                            value={ this.state.form.email }\r\n                            invalidMessage=\"Insira um email válido\"\r\n                        >\r\n                            Email\r\n                        </Input>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"courseInscription\"\r\n                            placeholder=\"Curso\"\r\n                            onChange={ this.courseChange }\r\n                            isValid={ this.state.is.isCourse }\r\n                            value={ this.state.form.course }\r\n                            invalidMessage=\"Insira um curso\"\r\n                        >\r\n                            Curso\r\n                        </Input>\r\n\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Select name=\"Grupo\" id=\"group\" value={ this.state.form.group } onChange={ this.inputChange }>\r\n                            <Option>Três Lagoas - Conexões de Saberes Matemáticos</Option>\r\n                            <Option>Três Lagoas - Geografia</Option>\r\n                            <Option>Três Lagoas - Enfermagem</Option>\r\n                            <Option>Três Lagoas - História</Option>\r\n                            <Option>Três Lagoas - Matemática</Option>\r\n\r\n                            <Option>Chapadão do Sul - Agronomia e Engenharia Florestal</Option>\r\n\r\n                            <Option>Campo Grande - Farmácia</Option>\r\n                            <Option>Campo Grande - Zootecnia</Option>\r\n                            <Option>Campo Grande - Química</Option>\r\n                            <Option>Campo Grande - Educação Física</Option>\r\n                            <Option>Campo Grande - Engenharia Elétrica</Option>\r\n                            <Option>Campo Grande - Materiais</Option>\r\n                            <Option>Campo Grande - Ciência da Computação</Option>\r\n                            <Option>Campo Grande - Sistemas</Option>\r\n\r\n                            <Option>Ponta Porã - Fronteira</Option>\r\n                            <Option>Ponta Porã - Conexões de Saberes Matemática</Option>\r\n\r\n                            <Option>Naviral - Pedagogia e Ciência Sociais</Option>\r\n                        </Select>\r\n                        <Select name=\"Sexo\" id=\"gender\" value={ this.state.form.gender } onChange={ this.inputChange }>\r\n                            <Option>Feminino</Option>\r\n                            <Option>Masculino</Option>\r\n                        </Select>\r\n                        <Select name=\"Etnia\" id=\"ethnicity\" value={ this.state.form.ethnicity } onChange={ this.inputChange }>\r\n                            <Option>Branco</Option>\r\n                            <Option>Negro</Option>\r\n                            <Option>Indígena</Option>\r\n                            <Option>Pardo</Option>\r\n                            <Option>Caboclo</Option>\r\n                            <Option>Cafuzo</Option>\r\n                        </Select>\r\n                        <Select name=\"Data de Chegada\" id=\"arrivalDate\" value={ this.state.form.arrivalDate } onChange={ this.inputChange }>\r\n                            <Option>22/03/2018</Option>\r\n                            <Option>23/03/2018</Option>\r\n                        </Select>\r\n                        <Select name=\"Data de Saída\" id=\"departureDate\" value={ this.state.form.departureDate } onChange={ this.inputChange }>\r\n                            <Option>23/03/2018</Option>\r\n                            <Option>24/03/2018</Option>\r\n                        </Select>\r\n\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"contactInscription\"\r\n                            placeholder=\"Contato\"\r\n                            onChange={ this.contactChange }\r\n                            isValid={ this.state.is.isContact }\r\n                            value={ this.state.form.contact }\r\n                            invalidMessage=\"Insira um contato\"\r\n                        >\r\n                            Contato\r\n                        </Input>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"emergencyContactInscription\"\r\n                            placeholder=\"Contato de Emergência\"\r\n                            onChange={ this.emergencyContactChange }\r\n                            isValid={ this.state.is.isEmergencyContact }\r\n                            value={ this.state.form.emergencyContact }\r\n                            invalidMessage=\"Insira um contato de emergência\"\r\n                        >\r\n                            Contato de Emergência\r\n                        </Input>\r\n\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Textarea id=\"allergy\" name=\"Intolerância/Alergia\" onChange={ this.inputChange } value={ this.state.form.allergy }/>\r\n                        <Textarea id=\"deficiency\" name=\"Deficiência\" onChange={ this.inputChange } value={ this.state.form.deficiency }/>\r\n\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Error { ...this.state.inscriptionState }/>\r\n                        <Submit error={ this.state.isSuccessSubmit } id=\"idInscription\"> Inscreva-se </Submit>\r\n                    </form>\r\n                </Loading>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport Main from '../shared/container/main'\r\nimport ModalButton from '../shared/modal/button'\r\nimport Markdown from '../shared/markdown'\r\nimport Login from '../auth/login'\r\nimport Inscription from '../auth/inscription'\r\n\r\nexport default class Description extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        console.log(this.props.history.location.pathname)\r\n\r\n        if(this.props.isLoggedIn){\r\n            if(this.props.history.location.pathname === '/')\r\n                this.props.history.push('users')\r\n            else\r\n                this.props.history.push('users')\r\n            \r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Main>\r\n                <div className=\"col-md-7 col-lg-8 bg-white rounded\"> \r\n                    <div className=\"text-right\">\r\n                        <ModalButton target=\"#login\"> Login </ModalButton>\r\n                        <ModalButton target=\"#register\"> Inscreva-se </ModalButton>\r\n                    </div>\r\n                    <Markdown />\r\n                </div>\r\n                <Login history={ this.props.history }/>\r\n                <Inscription />\r\n            </Main>\r\n        )\r\n    }\r\n}","import FirebaseService from '../services/firebaseService'\r\n\r\nexport const getActiveties = async () => {\r\n    var activeties = await FirebaseService.getOneData('activeties')\r\n    return activeties\r\n}\r\n\r\nexport const getUserActiveties = async (rga) => {\r\n    var activeties = await FirebaseService.getOneData('users', rga, 'activeties')\r\n    return activeties\r\n}\r\n\r\nexport const activityInscription = async (rga, activity, name) => {\r\n    var formInscription = {\r\n        inscription: true\r\n    }\r\n\r\n    var formUser = {\r\n        rga: rga,\r\n        presence: false,\r\n        name: name\r\n    }\r\n\r\n    var hasInserted = await FirebaseService.insertData(formInscription, 'users', rga, 'activeties', activity)\r\n\r\n    var activityName = activity\r\n    await FirebaseService.updateData((activity) => {\r\n        if(activity){\r\n            activity.vacancies--\r\n        }\r\n        return activity\r\n    }, 'activeties', activityName)\r\n\r\n    setTimeout(() => {\r\n        FirebaseService.insertData(formUser, 'activeties', activity, 'users', rga)\r\n    }, 1000);\r\n\r\n    return hasInserted\r\n}\r\n\r\nexport const removeActivityInscription = async (rga, activity) => {\r\n    var hasRemoved = await FirebaseService.removeData('users', rga, 'activeties', activity)\r\n    setTimeout(() => {\r\n        FirebaseService.removeData('activeties', activity, 'users', rga)\r\n    }, 1000);\r\n    return hasRemoved\r\n}\r\n\r\nexport const updateDecrementVacanciesActivity = async (activityName) => {\r\n    var hasRemoved = await FirebaseService.updateData((activity) => {\r\n        if(activity){\r\n            activity.vacancies--\r\n        }\r\n        return activity\r\n    }, 'activeties', activityName)\r\n    return hasRemoved\r\n}\r\n\r\nexport const updateIncrementVacanciesActivity = async (activityName) => {\r\n    var hasRemoved = await FirebaseService.updateData((activity) => {\r\n        if(activity){\r\n            activity.vacancies++\r\n        }\r\n        return activity\r\n    }, 'activeties', activityName)\r\n    return hasRemoved\r\n}","import React from 'react'\r\n\r\nexport const ListGroup = ( props ) => {\r\n    return (\r\n        <div className=\"col-md-4 p-2\">\r\n            <div className=\"list-group rounded shadow\" id=\"list-tab-activities\" role=\"tablist\">\r\n                { props.children }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const ListGroupContent = ( props ) => {\r\n    return (\r\n        <div className=\"col-md-8\">\r\n            <div className=\"tab-content\" id=\"nav-tabContent\">\r\n                { props.children }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const ListGroupContentSupport = ( props ) => {\r\n    return (\r\n        <div class=\"col-md-8\">\r\n            <div class=\"tab-content\" id=\"nav-tabContent\">\r\n                { props.children }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { \r\n    activityInscription, \r\n    removeActivityInscription,\r\n    updateIncrementVacanciesActivity\r\n} from '../effects'\r\nimport { objectToArray } from '../../utils/document'\r\n\r\n\r\nexport const ItemGroup = ( props ) => {\r\n    var className = `list-group-item list-group-item-action ` + ( props.id === 0 ? 'active' : '' )\r\n    var itemId = `item-${props.id}`\r\n    var contentId = `#content-${props.id}`\r\n    return (\r\n        <a className={ className } id={ itemId } data-toggle=\"list\" href={ contentId } role=\"tab\" aria-controls=\"home\">\r\n            { props.title }\r\n            { props.hasInscription ? (<span className=\"badge badge-success badge-pill\">inscrito</span>) : null }\r\n        </a>\r\n    )\r\n}\r\n\r\nexport const ItemGroupContent = ( props ) => {\r\n    var className = `mt-2 text-justify tab-pane fade show ` + ( props.id === 0 ? 'active' : '' )\r\n    var itemId = `content-${props.id}`\r\n    \r\n    var inscriptionButton = props.vacancies !== 0 ? props.hasInscription ? (\r\n        <button type=\"button\" onClick={ \r\n            async () => {\r\n                await removeActivityInscription(props.rga, props.title) \r\n                await updateIncrementVacanciesActivity(props.title)\r\n                props.reload()\r\n            }\r\n        } className=\"btn btn-outline-danger\">Sair da atividade</button>\r\n    ) : (\r\n        <button type=\"button\" onClick={ \r\n            async () => {\r\n                await activityInscription(props.rga, props.title, props.name) \r\n                props.reload()\r\n            }\r\n        } className=\"btn btn-outline-primary\">Inscrever-se na atividade</button>\r\n    ) : null\r\n\r\n    return (\r\n        <div className={ className } id={ itemId } role=\"tabpanel\" aria-labelledby=\"list-home-list\">\r\n            <p>{ props.description }</p>\r\n            { props.type !== \"ALL\" ? inscriptionButton : null }\r\n            { props.vacancies ? (\r\n                <div>\r\n                    <span className=\"badge badge-success badge-pill\"> { `Vagas: ${props.vacancies}` }</span>\r\n                </div>\r\n            ) : null }\r\n        </div>\r\n    )\r\n}\r\n\r\n//Support\r\n\r\nexport const ItemGroupContentSupport = (props) => {\r\n    var className = `mt-2 text-justify tab-pane fade show ` + ( props.id === 0 ? 'active' : '' )\r\n    var itemId = `content-${props.id}`\r\n    var users = objectToArray( props.users ? props.users : [] )\r\n\r\n    var listUsers = users.map((user, index) => {\r\n        return (\r\n            <tr key={ index }>\r\n                <th scope=\"row\">{ user.name }</th>\r\n                <td>{ user.rga }</td>\r\n                <td>{ user.presence === true ? 'VEIO' : 'PENDENTE'}</td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className={ className } id={ itemId } role=\"tabpanel\" aria-labelledby=\"list-home-list\">\r\n            <Link to={ `${props.match.url}/${props.activityName}/qrcode/${props.type}` } className=\"btn btn-outline-info mb-1\">Frequência</Link>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Nome</th>\r\n                            <th scope=\"col\">RGA</th>\r\n                            <th scope=\"col\">Frequência</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { listUsers }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\n\r\nimport { LoadApplicationState } from '../utils/localStorage'\r\nimport { objectToArray } from '../utils/document'\r\nimport { getActiveties, getUserActiveties } from './effects'\r\n\r\n\r\nimport { ListGroup, ListGroupContent } from './list/list'\r\nimport { ItemGroup, ItemGroupContent } from './list/item'\r\n\r\nexport default class ActivetiesRegistered extends Component {\r\n    constructor(props){\r\n        \r\n        super(props)\r\n        this.state = {\r\n            user: LoadApplicationState()\r\n        }\r\n\r\n        this.renderActivies = this.renderActivies.bind(this)\r\n        this.reload = this.reload.bind(this)\r\n    }\r\n\r\n    async componentWillMount(){\r\n        this.setState({\r\n            activeties: objectToArray(await getActiveties()),\r\n            myActiveties: await getUserActiveties(this.state.user.rga)\r\n        })\r\n    }\r\n\r\n    async reload(){\r\n        this.setState({\r\n            activeties: objectToArray(await getActiveties()),\r\n            myActiveties: await getUserActiveties(this.state.user.rga)\r\n        })\r\n    }\r\n\r\n    renderActivies(){\r\n        if(!this.state.activeties)\r\n            return null\r\n        \r\n        var hasActiveties = !this.state.myActiveties ? false : true\r\n        const itemGroup = this.state.activeties.map((activity, index) => {\r\n\r\n            var hasInscription = hasActiveties ? this.state.myActiveties[activity.name] ? true : false : false\r\n\r\n            return (\r\n                <ItemGroup \r\n                    key={ index }\r\n                    title={ activity.name }\r\n                    id={ index }\r\n                    hasInscription={ hasInscription } \r\n                />\r\n            )\r\n        });\r\n\r\n        const itemGroupContent = this.state.activeties.map((activity, index) => {\r\n            \r\n            var hasInscription = hasActiveties ? this.state.myActiveties[activity.name] ? true : false : false\r\n\r\n            return (\r\n                <ItemGroupContent \r\n                    key={ index }\r\n                    title={ activity.name }\r\n                    description={ activity.description }\r\n                    id={ index }\r\n                    vacancies={ activity.vacancies }\r\n                    hasInscription={ hasInscription }\r\n                    rga={ this.state.user.rga }\r\n                    reload={ this.reload }\r\n                    type={ activity.inscription }\r\n                    name={ this.state.user.name }\r\n                />\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"mt-2 mb-2 p-3\">\r\n                <div className=\"row\">\r\n                    <ListGroup>\r\n                        { itemGroup }\r\n                    </ListGroup>\r\n                    <ListGroupContent>\r\n                        { itemGroupContent }\r\n                    </ListGroupContent>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return this.renderActivies()\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { LoadApplicationState } from '../utils/localStorage'\r\nimport { objectToArray } from '../utils/document'\r\nimport { getActiveties, getUserActiveties } from './effects'\r\n\r\n\r\nimport { ListGroup, ListGroupContent } from './list/list'\r\nimport { ItemGroup, ItemGroupContentSupport } from './list/item'\r\n\r\nexport default class ActivetiesSupport extends Component {\r\n    constructor(props){\r\n        \r\n        super(props)\r\n        this.state = {\r\n            user: LoadApplicationState()\r\n        }\r\n\r\n        this.renderActivies = this.renderActivies.bind(this)\r\n        this.reload = this.reload.bind(this)\r\n    }\r\n\r\n    async componentWillMount(){\r\n        this.setState({\r\n            activeties: objectToArray(await getActiveties()),\r\n            myActiveties: await getUserActiveties(this.state.user.rga)\r\n        })\r\n    }\r\n\r\n    async reload(){\r\n        this.setState({\r\n            activeties: objectToArray(await getActiveties()),\r\n            myActiveties: await getUserActiveties(this.state.user.rga)\r\n        })\r\n    }\r\n\r\n    renderActivies(){\r\n        if(!this.state.activeties)\r\n            return null\r\n        \r\n        var hasActiveties = !this.state.myActiveties ? false : true\r\n        const itemGroup = this.state.activeties.map((activity, index) => {\r\n\r\n            var hasInscription = hasActiveties ? this.state.myActiveties[activity.name] ? true : false : false\r\n\r\n            return (\r\n                <ItemGroup \r\n                    key={ index }\r\n                    title={ activity.name }\r\n                    id={ index }\r\n                    hasInscription={ hasInscription } \r\n                />\r\n            )\r\n        });\r\n\r\n        const itemGroupContent = this.state.activeties.map((activity, index) => {\r\n            \r\n            return (\r\n                <ItemGroupContentSupport \r\n                    key={ index }\r\n                    id={ index }\r\n                    vacancies={ activity.vacancies }\r\n                    users={ activity.users }\r\n                    activityName={ activity.name }\r\n                    match={ this.props.match }\r\n                    type={ activity.inscription }\r\n                />\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"mt-2 mb-2 p-3\">\r\n                <div className=\"row\">\r\n                    <ListGroup>\r\n                        { itemGroup }\r\n                    </ListGroup>\r\n                    <ListGroupContent>\r\n                        { itemGroupContent }\r\n                    </ListGroupContent>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return this.renderActivies()\r\n    }\r\n}","import React from 'react'\r\n\r\nimport { LoadApplicationState } from '../utils/localStorage'\r\n\r\nconst ShowQrCode = (props) => {\r\n    var user = LoadApplicationState()\r\n    return (\r\n        <div className=\"mt-2 mb-2 p-3\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"card col-lg-5 col-md-8 col-sm-8\">\r\n                    <img \r\n                        className=\"card-img-top\" \r\n                        src={ `https://chart.googleapis.com/chart?cht=qr&chl=${user.rga}&chs=180x180&choe=UTF-8&chld=L|2` } \r\n                    />\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Código de Frequência</h5>\r\n                        <p className=\"card-text text-justify\">Antes de entrar na sala da atividade, mostre para o supervisor o código acima.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowQrCode","import React, { Component } from 'react'\r\n\r\nimport Modal from '../../shared/modal/modal'\r\nimport { Error } from '../error'\r\nimport { changePassword } from '../auth'\r\n\r\nimport { Loading } from '../../shared/loading'\r\nimport { Input } from '../input'\r\nimport { Submit } from '../submit'\r\nimport { Null, False, True, Nothing } from '../../constant';\r\nimport { LoadApplicationState } from '../../utils/localStorage';\r\n\r\n\r\nexport default class ChangePassword extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            changePasswordState: {\r\n                isSuccess: Null,\r\n                message: Nothing\r\n            },\r\n            isLoading: False,\r\n            rga: LoadApplicationState().rga\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.inputChange = this.inputChange.bind(this)\r\n        this.LoadingOn = this.LoadingOn.bind(this)\r\n        this.LoadingOff = this.LoadingOff.bind(this)\r\n    }\r\n\r\n    LoadingOn(){\r\n        this.setState({\r\n            isLoading: True\r\n        })\r\n    }\r\n\r\n    LoadingOff(){\r\n        this.setState({\r\n            isLoading: False\r\n        })\r\n    }\r\n\r\n    inputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n            form: { ...this.state.form, [name]: value },\r\n        });\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        event.preventDefault()\r\n\r\n        if(this.state.form.newPassword.length < 8 || this.state.form.newPasswordConfirmation < 8){\r\n            this.setState({\r\n                changePasswordState: {\r\n                    isSuccess: False,\r\n                    message: 'Insira uma senha com no mínimo 8 caracteres'\r\n                }\r\n            })\r\n\r\n            return false\r\n        }\r\n\r\n        if(this.state.form.newPassword !== this.state.form.newPasswordConfirmation){\r\n            this.setState({\r\n                changePasswordState: {\r\n                    isSuccess: False,\r\n                    message: 'As senha não se correspondem'\r\n                }\r\n            })\r\n            return false\r\n        }\r\n\r\n        this.LoadingOn()\r\n\r\n        var hasUpdated = await changePassword(this.state.form.newPassword, this.state.rga)\r\n        if(hasUpdated){\r\n            this.setState({\r\n                changePasswordState: {\r\n                    isSuccess: True,\r\n                    message: 'A Senha foi mudada'\r\n                }\r\n            })\r\n        } else {\r\n            this.setState({\r\n                changePasswordState: {\r\n                    isSuccess: True,\r\n                    message: 'Houve algum erro...'\r\n                }\r\n            })\r\n        }\r\n\r\n        setTimeout( this.LoadingOff , 1500);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Modal id=\"changePassword\"> \r\n                <h3 className=\"login-heading mb-4\">Login</h3>\r\n                <form onSubmit={ this.handleSubmit }>\r\n                    <Loading isLoading={ this.state.isLoading }>\r\n                        <Input\r\n                            type=\"password\"\r\n                            id=\"newPassword\"\r\n                            placeholder=\"Insira uma senha com no mínimo 8 caracteres\"\r\n                            onChange={ this.inputChange }\r\n                            invalidMessage=\"Insira um rga válido\"\r\n                        >\r\n                            Senha\r\n                        </Input>\r\n                        <Input\r\n                            type=\"password\"\r\n                            id=\"newPasswordConfirmation\"\r\n                            placeholder=\"Repita a senha\"\r\n                            onChange={ this.inputChange }\r\n                        >\r\n                            Repita a senha\r\n                        </Input>\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Error { ...this.state.changePasswordState }/>\r\n                        <Submit id=\"idChangePassword\"> Trocar Senha </Submit>\r\n                    </Loading>\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport QrReader from \"react-qr-reader\";\r\n\r\nimport { Loading } from '../shared/loading'\r\nimport { False, True } from '../constant';\r\nimport { presence } from './effects'\r\n\r\nexport default class Reader extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            activityName: this.props.match.params.activity,\r\n            activityType: this.props.match.params.type,\r\n            delay: 500,\r\n            isLoading: False\r\n        }\r\n\r\n        this.handleScan = this.handleScan.bind(this)\r\n    }\r\n\r\n    handleScan(data) {\r\n        if (data) {\r\n            this.setState({\r\n                isLoading: True\r\n            })\r\n\r\n            presence(this.state.activityName, data)\r\n\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    isLoading: False\r\n                })\r\n            }, 2000);\r\n        }\r\n    }\r\n    \r\n    handleError(err) {\r\n        console.error(err);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"mt-2 mb-2 p-3\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"card col-lg-5 col-md-8 col-sm-8\">\r\n                        <Loading isLoading={ this.state.isLoading }>\r\n                            <QrReader\r\n                                delay={this.state.delay}\r\n                                onError={this.handleError}\r\n                                onScan={this.handleScan}\r\n                                style={{ width: \"100%\" }}\r\n                            />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Leitor de Frequência</h5>\r\n                                <p className=\"card-text text-justify\">\r\n                                    Coloque o leitor em frente do código do inscrito. Quando for reconhecido, será alertado se a frequência foi efetuada ou se deu erro.\r\n                                </p>\r\n                            </div>\r\n                        </Loading>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import FirebaseService from '../services/firebaseService'\r\n\r\nexport const presence = (activityName, rga) => {\r\n    FirebaseService.updateData((inscription) => {\r\n        if(inscription){\r\n            inscription.presence = true\r\n        }\r\n        return inscription\r\n    }, 'activeties', activityName, 'users', rga)\r\n} ","import React, { Component } from \"react\";\r\nimport {Route, Link, Redirect } from \"react-router-dom\";\r\n\r\nimport Main from '../shared/container/main'\r\nimport ActivetiesRegistered from '../activeties/registered'\r\nimport ActivetiesSupport from '../activeties/support'\r\nimport ShowQrCode from '../qrCode/show'\r\nimport ChangePassword from \"../auth/changePassword\";\r\nimport Reader from '../qrCode/reader'\r\n\r\n\r\nimport { RemoveApplicationState, LoadApplicationState } from '../utils/localStorage'\r\n\r\nexport default class UserRoute extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            quit: false,\r\n            user: LoadApplicationState()\r\n        }\r\n\r\n        this.registered = this.registered.bind(this)\r\n        this.support = this.support.bind(this)\r\n        this.quit = this.quit.bind(this)\r\n\r\n        \r\n    }\r\n\r\n    quit(){\r\n        RemoveApplicationState()\r\n        this.props.reload()\r\n        this.setState({\r\n            quit: true\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(this.state.user.type)\r\n    }\r\n\r\n    registered(){\r\n        return (\r\n            <Main>\r\n                <div className=\"col-md-10 col-lg-8 bg-white rounded\"> \r\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mt-2 rounded shadow \">\r\n                        <Link className=\"navbar-brand\" to={`${this.props.match.url}/activeties`}>PET EVENTO</Link>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        \r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to={`${this.props.match.url}/activeties`}>Atividades</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to={`${this.props.match.url}/myQrCode`}>Código de Frequência</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" data-toggle=\"modal\" data-target=\"#changePassword\">Mudar Senha</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a onClick={ this.quit } className=\"nav-link\">Sair</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                    <Route path={`${this.props.match.path}activeties`} exact render={\r\n                        (props) => <ActivetiesRegistered user={ this.props.user } {...props}/>\r\n                    }/>\r\n                    <Route path={`${this.props.match.path}myQrCode`} render={\r\n                        (props) => <ShowQrCode {...props}/>\r\n                    }/>\r\n                </div>\r\n                <ChangePassword/>\r\n            </Main>\r\n        )\r\n    }\r\n\r\n    support(){\r\n        return (\r\n            <Main>\r\n                <div className=\"col-md-10 col-lg-8 bg-white rounded\"> \r\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mt-2 rounded shadow \">\r\n                        <Link className=\"navbar-brand\" to={`${this.props.match.url}/activeties`}>PET EVENTO</Link>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        \r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to={`${this.props.match.url}/activeties`}>Atividades</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" data-toggle=\"modal\" data-target=\"#changePassword\">Mudar Senha</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a onClick={ this.quit } className=\"nav-link\">Sair</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                    <Route path={`${this.props.match.path}activeties`} exact render={\r\n                        (props) => <ActivetiesSupport user={ this.props.user } {...props}/>\r\n                    }/>\r\n                    <Route path={`${this.props.match.path}activeties/:activity/qrcode/:type`} render={\r\n                        (props) => <Reader user={ this.props.user } { ...props }/>\r\n                    } />\r\n\r\n                </div>\r\n                <ChangePassword/>\r\n            </Main>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        if(this.state.quit)\r\n            return <Redirect to={{\r\n                pathname: \"/pet-event/\",\r\n            }}/>\r\n        \r\n        switch(this.state.user.type){\r\n            case \"REGISTERED\":\r\n                return this.registered()\r\n            case \"SUPPORT\":\r\n                return this.support()\r\n            case \"ADMINISTRATOR\":\r\n                return (<div>Administrador</div>)\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport { LoadApplicationState } from '../utils/localStorage'\r\n\r\nimport Description from '../description'\r\nimport Activeties from '../activeties/registered'\r\nimport UserRoute from './user'\r\n\r\nclass Router extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.loadData = this.loadData.bind(this)\r\n    this.reload = this.reload.bind(this)\r\n\r\n    this.loadData()\r\n\r\n    console.log('V7')\r\n  }\r\n\r\n  loadData(){\r\n    var data = LoadApplicationState()\r\n    this.state = {\r\n      isLoggedIn: data ? true : false,\r\n      user: data\r\n    }\r\n  }\r\n\r\n  reload(){\r\n    var data = LoadApplicationState()\r\n    this.setState({\r\n      isLoggedIn: data ? true : false,\r\n      user: data\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/pet-event/\" exact={true} render={ \r\n                  (props) => <Description isLoggedIn={ this.state.isLoggedIn } {...props} /> \r\n                }/>\r\n                <Route path=\"/pet-event/users/\" render={ \r\n                  (props) => <UserRoute reload={ this.reload } user={ this.state.user } {...props}/>\r\n                }/>\r\n                \r\n                <Route path=\"/activeties/\" render={ \r\n                  (props) => <Activeties history={this.props.history} isLoggedIn={ this.state.isLoggedIn }  user={ this.state.user } {...props} /> \r\n                }/>\r\n                <Route path='*' render={ \r\n                  (props) => <Description isLoggedIn={ this.state.isLoggedIn } {...props} /> \r\n                }/>\r\n            </Switch>\r\n        </ BrowserRouter>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Router;\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Router from './route/route'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router/>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}