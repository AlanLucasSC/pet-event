{"version":3,"sources":["components/utils/localStorage.js","components/shared/container/main.jsx","components/shared/modal/button.jsx","components/shared/markdown/index.jsx","components/constant.jsx","components/auth/error.jsx","components/shared/modal/modal.jsx","components/utils/dictionary.js","components/utils/document.js","components/utils/auth.jsx","components/auth/input.jsx","components/auth/submit.jsx","components/shared/loading.jsx","components/utils/firebaseUtils.js","components/services/firebaseService.js","components/utils/email.js","components/auth/auth.js","components/auth/login/index.jsx","components/auth/select.jsx","components/auth/textarea.jsx","components/auth/inscription/index.jsx","components/description/index.jsx","components/activeties/effects.js","components/activeties/list/list.jsx","components/activeties/list/item.jsx","components/activeties/registered.jsx","components/activeties/support.jsx","components/activeties/administrator.jsx","components/qrCode/show.jsx","components/auth/changePassword/index.jsx","components/qrCode/effects.js","components/qrCode/reader.jsx","components/activeties/plusVacancy/plusVacancy.jsx","components/supportList/effects.js","components/supportList/supportList.jsx","components/auth/supportUserInscription/index.jsx","components/route/user.jsx","components/route/route.jsx","components/App.js","serviceWorker.js","index.js"],"names":["LoadApplicationState","key","value","localStorage","getItem","JSON","parse","Load","Main","props","react_default","a","createElement","className","children","ModalButton","type","data-toggle","data-target","target","Markdown","False","Void","undefined","Null","InitialInput","Nothing","InscriptionType","Error","isSuccess","message","Modal","id","tabIndex","role","aria-labelledby","aria-hidden","concat","data-dismiss","dictionary","name","PT-BR","objectToArray","object","Object","values","downloadCsv","data","text","file","download","replaceAll","needle","replacement","split","join","dataToCsv","callback","converter","json2csv","err","csv","forEach","word","processingCsv","isEmail","email","test","String","toLowerCase","isPassword","password","isNothing","isRga","length","checkForm","is","index","Input","isValid","inputValidation","isVoid","placeholder","onChange","required","validMessage","invalidMessage","htmlFor","Submit","error","Loading","isLoading","firebaseDatabase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","FirebaseService","getOneData","_callee","path","query","_len","child","_key","snapshot","_args","arguments","regenerator_default","wrap","_context","prev","next","ref","Array","item","once","sent","val","abrupt","stop","listenIfChildAdded","on","insertData","form","_len2","_key2","set","removeData","_len3","_key3","remove","updateData","_len4","_key4","transaction","sendEmail","_ref","asyncToGenerator","mark","response","axios","get","status","t0","_x","_x2","apply","this","doLogin","user","success","rga","md5","doInscription","_ref2","_callee2","_context2","objectSpread","changePassword","_ref3","_callee3","_context3","_x3","_x4","Login","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","loginState","handleSubmit","bind","assertThisInitialized","rgaChange","passwordChange","LoadingOn","LoadingOff","closeModal","loginSuccess","event","setState","document","querySelector","click","history","push","preventDefault","setItem","stringify","setTimeout","modal","onSubmit","loading_Loading","input_Input","error_Error","submit_Submit","Component","Select","Option","Textarea","rows","isSuccessSubmit","inscriptionState","isName","isCourse","isContact","isEmergencyContact","course","contact","emergencyContact","group","gender","ethnicity","arrivalDate","departureDate","allergy","deficiency","nameChange","emailChange","courseChange","contactChange","emergencyContactChange","inputChange","submitError","submitDefault","checked","defineProperty","doInscriptionResponse","select_Select","select_Option","textarea_Textarea","Description","isLoggedIn","location","pathname","main","modal_button","markdown","login_Login","inscription_Login","getActiveties","activeties","getUserActiveties","getUsers","users","activityInscription","_ref4","_callee4","activity","formInscription","formUser","hasInserted","activityName","_context4","inscription","presence","vacancies","removeActivityInscription","_ref5","_callee5","hasRemoved","_context5","_x5","_x6","updateIncrementVacanciesActivity","_ref7","_callee7","_context7","_x8","updateVacanciesActivity","_ref8","_callee8","hasUpdated","_context8","parseInt","_x9","_x10","ListGroup","ListGroupContent","ItemGroup","itemId","contentId","href","aria-controls","title","hasInscription","ItemGroupContent","inscriptionButton","onClick","reload","description","ItemGroupContentSupport","listUsers","map","scope","Link","to","match","url","ItemGroupContentAdministrator","exportToCsv","handleActivity","ActivetiesRegistered","renderActivies","myActiveties","_this2","hasActiveties","itemGroup","item_ItemGroup","itemGroupContent","item_ItemGroupContent","list_ListGroup","list_ListGroupContent","ActivetiesSupport","item_ItemGroupContentSupport","ActivetiesAdministrator","activitySelected","exportUsersToCsv","usersFormated","filename","item_ItemGroupContentAdministrator","reloadingPage","ShowQrCode","src","ChangePassword","changePasswordState","newPassword","newPasswordConfirmation","activityType","console","log","Reader","presenceState","params","delay","startPresence","handleScan","lib_default","onError","handleError","onScan","style","width","PlusVacancy","changeVacancyState","plusVacancy","getSupportUsers","supportUsers","filter","deleteSupportUsers","SupportList","loadSupportUsers","deleteSupportUser","renderSupportUsers","SupportUserInscription","changeSupportUserInscriptionState","UserRoute","quit","registered","support","administrator","removeItem","aria-expanded","aria-label","Route","exact","render","registered_ActivetiesRegistered","assign","show","changePassword_ChangePassword","_this3","support_ActivetiesSupport","reader_Reader","_this4","administrator_ActivetiesAdministrator","supportList_SupportList","plusVacancy_PlusVacancy","supportUserInscription_SupportUserInscription","Redirect","Router","loadData","BrowserRouter","Switch","description_Description","user_UserRoute","App","route","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","src_components_App","getElementById","URL","process","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bfcfe6f3.chunk.js","sourcesContent":["export const Save = (data) => {\r\n    localStorage.setItem(\"state\", JSON.stringify(data))\r\n}\r\n\r\nexport const Load = (key) => {\r\n    var value = localStorage.getItem(key)\r\n    return JSON.parse(value)\r\n}\r\n\r\nexport const LoadApplicationState = () => {\r\n    var key = 'state'\r\n    return Load(key)\r\n}\r\n\r\nexport const RemoveApplicationState = () => {\r\n    var key = 'state'\r\n    localStorage.removeItem(key);\r\n}","import React from 'react'\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <div className=\"container mt-5 mb-5\">\r\n            <div className=\"row justify-content-center\">\r\n                { props.children }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react'\r\n\r\nconst ModalButton = (props) => {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-outline-primary m-2\" data-toggle=\"modal\" data-target={ props.target }>\r\n            { props.children }\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ModalButton","import React from 'react'\r\n\r\nconst Markdown = (props) => {\r\n    return (\r\n        <div className=\"markdown p-3\">\r\n            <h1> <strong>XXI Semana da Matemática – 4 a 7 de dezembro/2018.</strong> </h1>\r\n            <p>\r\n                A <strong>XXI Semana de Matemática</strong> tem como objetivo principal a criação de um ambiente onde estudantes das escolas públicas e privadas, educadores, acadêmicos, professores da universidade e a comunidade em geral possam interagir, trocando experiências profissionais e conhecimentos matemáticos.\r\n            </p>\r\n            <p>\r\n                Nesta edição pretende-se promover o curso de Licenciatura em Matemática da instituição por meio da discussão de assuntos relacionados ao ensino da Matemática, suas tecnologias e a formação de profissionais na área da Licenciatura em Matemática por meio do Programa Institucional de Bolsas de Iniciação a Docência (Pibid) e o Programa de Residência Pedagógica (RP). Procura-se também favorecer a aproximação dos acadêmicos com as escolas da Educação Básica e com professores da disciplina da Matemática.\r\n            </p>\r\n            <p>\r\n                Em sua programação, o evento conta com palestrantes, minicursos, oficinas e exposição de trabalhos desenvolvidos pelos alunos e relacionados com a Matemática e o ensino da Matemática nas escolas de educação básica. O evento deve ser também um momento de socialização e integração entre os acadêmicos do curso de graduação, docentes das universidades, alunos da pós-graduação, alunos e professores de escolas da Educação Básica.\r\n            </p>\r\n            <ul>\r\n                <li> \r\n                    As inscrições poderão ser realizadas até o dia 04/12/2018 na Coordenação do Curso de Matemática (Espaço Multiuso – Sala 1 – Unid. I) ou na Sala H-227 (Unid. I) ou na Sala 5 (Unid. II) com os acadêmicos ANDRESSA BRITTES, Contato: 99929-0565; ARIEL DA SILVA COSTA, Contato: 99830-2296; DANIELLE VELASQUEZ, Contato: 99121-9825; DANIEL SOUZA, Contato: 99695-8925 ou ILMA DANIELLE, Contato: 98437-2330.\r\n                </li>\r\n            \r\n                <li>\r\n                    As inscrições poderão ser realizadas até o dia 04/12/2018 na Coordenação do Curso de Matemática (Espaço Multiuso – Sala 1 – Unid. I) ou na Sala H-227 (Unid. I) ou na Sala 5 (Unid. II) com os acadêmicos ANDRESSA BRITTES, Contato: 99929-0565; ARIEL DA SILVA COSTA, Contato: 99830-2296; DANIELLE VELASQUEZ, Contato: 99121-9825; DANIEL SOUZA, Contato: 99695-8925 ou ILMA DANIELLE, Contato: 98437-2330.\r\n                </li>\r\n                <li>\r\n                    As inscrições poderão ser realizadas até o dia 04/12/2018 na Coordenação do Curso de Matemática (Espaço Multiuso – Sala 1 – Unid. I) ou na Sala H-227 (Unid. I) ou na Sala 5 (Unid. II) com os acadêmicos ANDRESSA BRITTES, Contato: 99929-0565; ARIEL DA SILVA COSTA, Contato: 99830-2296; DANIELLE VELASQUEZ, Contato: 99121-9825; DANIEL SOUZA, Contato: 99695-8925 ou ILMA DANIELLE, Contato: 98437-2330.\r\n                </li>\r\n                <li>\r\n                    As inscrições poderão ser realizadas até o dia 04/12/2018 na Coordenação do Curso de Matemática (Espaço Multiuso – Sala 1 – Unid. I) ou na Sala H-227 (Unid. I) ou na Sala 5 (Unid. II) com os acadêmicos ANDRESSA BRITTES, Contato: 99929-0565; ARIEL DA SILVA COSTA, Contato: 99830-2296; DANIELLE VELASQUEZ, Contato: 99121-9825; DANIEL SOUZA, Contato: 99695-8925 ou ILMA DANIELLE, Contato: 98437-2330.\r\n                </li>\r\n                <li>\r\n                    As inscrições poderão ser realizadas até o dia 04/12/2018 na Coordenação do Curso de Matemática (Espaço Multiuso – Sala 1 – Unid. I) ou na Sala H-227 (Unid. I) ou na Sala 5 (Unid. II) com os acadêmicos ANDRESSA BRITTES, Contato: 99929-0565; ARIEL DA SILVA COSTA, Contato: 99830-2296; DANIELLE VELASQUEZ, Contato: 99121-9825; DANIEL SOUZA, Contato: 99695-8925 ou ILMA DANIELLE, Contato: 98437-2330.\r\n                </li>\r\n                <li>\r\n                    As inscrições poderão ser realizadas até o dia 04/12/2018 na Coordenação do Curso de Matemática (Espaço Multiuso – Sala 1 – Unid. I) ou na Sala H-227 (Unid. I) ou na Sala 5 (Unid. II) com os acadêmicos ANDRESSA BRITTES, Contato: 99929-0565; ARIEL DA SILVA COSTA, Contato: 99830-2296; DANIELLE VELASQUEZ, Contato: 99121-9825; DANIEL SOUZA, Contato: 99695-8925 ou ILMA DANIELLE, Contato: 98437-2330.\r\n                </li>\r\n            </ul>\r\n            <h2> <strong> DATA: 06/12/2018 – QUINTA-FEIRA </strong> </h2>\r\n            <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                    <th>HORÁRIO</th>\r\n                    <th>ATIVIDADE</th>\r\n                    <th>CONVIDADOS</th>\r\n                    <th>LOCAL</th>\r\n                    <th>VAGAS</th>\r\n                    <th>CH</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                    <td>10h – 12h 14h – 16h</td>\r\n                    <td>Credenciamento</td>\r\n                    <td>–</td>\r\n                    <td>Corredor H-108 (Unid. I)</td>\r\n                    <td>–</td>\r\n                    <td>4 h</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Markdown","export const True = true\r\nexport const False = false\r\nexport const Void = undefined\r\nexport const Null = null\r\nexport const InitialInput = ''\r\nexport const Invalid = 'is-invalid'\r\nexport const Valid = 'is-valid'\r\nexport const Nothing = ''\r\nexport const InscriptionType = 'REGISTERED'","import React from 'react'\r\n\r\nimport { False, True, Null } from '../constant'\r\n\r\nexport const Error = (props) => {\r\n    if(props.isSuccess === False){\r\n        return <span className=\"badge badge-danger\"> { props.message } </span>\r\n    } else {\r\n        if(props.isSuccess === True) return <span className=\"badge badge-success\"> { props.message } </span>\r\n    }\r\n    return Null\r\n}","import React from 'react'\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <div className=\"modal fade\" id={ props.id } tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog bg-white rounded\" role=\"document\">\r\n                <div className=\"modal-content login d-flex py-5\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-9 col-lg-9 mx-auto\">\r\n                                { props.children }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button id={ `close${ props.id }` } type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Fechar</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal","const dictionary = [\r\n    { name: 'description', 'PT-BR': 'Descrição' },\r\n    { name: 'activityDescription', 'PT-BR': 'Descrição da Atividade' },\r\n    { name: 'name', 'PT-BR': 'Nome' },\r\n    { name: 'activityName', 'PT-BR': 'Nome da Atividade' },\r\n    { name: 'inscription', 'PT-BR': 'Tipo de Inscrição' },\r\n    { name: 'activityInscription', 'PT-BR': 'Tipo de Inscrição da Atividade' },\r\n    { name: 'ALL', 'PT-BR': 'Todos inscritos' },\r\n    { name: 'CHOICE', 'PT-BR': 'Seleção' },\r\n    { name: 'users', 'PT-BR': 'Usuário' },\r\n    { name: 'presence', 'PT-BR': 'Presença' },\r\n    { name: 'true', 'PT-BR': 'Presente' },\r\n    { name: 'false', 'PT-BR': 'Pendente' },\r\n    { name: 'rga', 'PT-BR': 'RGA' },\r\n    { name: 'null', 'PT-BR': '' },\r\n    { name: 'undefined', 'PT-BR': '' },\r\n    { name: 'vacancies', 'PT-BR': 'Vagas Restantes' },\r\n    { name: 'activityVacancies', 'PT-BR': 'Vagas Restantes da Ativadade' },\r\n    { name: 'activeties', 'PT-BR': 'Atividades: ' },\r\n    { name: 'allergy', 'PT-BR': 'Intolerância/Alergia' },\r\n    { name: 'arrivalDate', 'PT-BR': 'Data de Chegada' },\r\n    { name: 'departureDate', 'PT-BR': 'Data de Saída' },\r\n    { name: 'contact', 'PT-BR': 'Contato' },\r\n    { name: 'course', 'PT-BR': 'Curso' },\r\n    { name: 'deficiency', 'PT-BR': 'Deficiência' },\r\n    { name: 'email', 'PT-BR': 'Email' },\r\n    { name: 'emergencyContact', 'PT-BR': 'Contanto de Emergência' },\r\n    { name: 'ethnicity', 'PT-BR': 'Etnia' },\r\n    { name: 'gender', 'PT-BR': 'Sexo' },\r\n    { name: 'group', 'PT-BR': 'Grupo' },\r\n    { name: 'type', 'PT-BR': 'Tipo de Usuário' },\r\n    { name: 'REGISTERED', 'PT-BR': 'Inscrito' },\r\n    { name: 'password', 'PT-BR': 'Senha' },\r\n]\r\n\r\nexport default dictionary","import download from 'downloadjs'\r\nimport converter from 'json-2-csv'\r\nimport dictionary from './dictionary'\r\n\r\nexport const hasChanges = (changes) => {\r\n    return changes.length === 0 ? true : false\r\n}\r\n\r\nexport const INITIAL_STATE = {\r\n    databaseDocument: '',\r\n    userDocument: '',\r\n    changes: [],\r\n    user: ''\r\n}\r\n\r\nexport const getElementOnArrayInReverse = (array, index) => {\r\n    var reverseArray = array.reverse()\r\n    return reverseArray[ index ]\r\n}\r\n\r\nexport const objectToArray = ( object ) => {\r\n    return Object.values( object )\r\n}\r\n\r\nexport const isoDateToShortDateWithHours = (dateObject) => {\r\n    let date = new Date( String( dateObject ) )\r\n    let dateShortFormat = date.getDay() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear()\r\n    let hours = date.getHours() + ':' + date.getMinutes()\r\n    return dateShortFormat + ' ' + hours\r\n}\r\n\r\nexport const redirectTo = (route) => {\r\n    window.location.replace(route)\r\n}\r\n\r\nexport const downloadText = (text, file, type) => {\r\n    download(text, file, type);\r\n}\r\n\r\nexport const downloadCsv = (data, name) => {\r\n    downloadText(data, `${name}.csv`, 'text/csv')\r\n}\r\n\r\nexport const replaceAll = (text, needle, replacement) => {\r\n    return text.split(needle).join(replacement)\r\n}\r\n\r\nexport const processingCsv = (csv) => {\r\n    csv = replaceAll(csv, '.', ' ')\r\n    dictionary.forEach(word => {\r\n        csv = replaceAll(csv, word.name, word[\"PT-BR\"])\r\n    })\r\n    return csv\r\n}\r\n\r\nexport const dataToCsv = (data, callback) => {\r\n    converter.json2csv(data, (err, csv) => {\r\n        if(!err)\r\n            csv = processingCsv(csv)\r\n        callback(err, csv)\r\n    })\r\n}","import { True, False, Void, Nothing } from '../constant'\r\nimport { objectToArray } from './document'\r\n\r\nexport const isEmail = (email) => {\r\n    var validEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return validEmail.test(String(email).toLowerCase());\r\n}\r\n\r\nexport const isPassword = (password) => {\r\n    var validPassword = /\\w{8,}/;\r\n    return validPassword.test(String(password));\r\n}\r\n\r\nexport const isVoid = (value) => {\r\n    return value === Void ? True : False\r\n}\r\n\r\nexport const isNothing = (value) => {\r\n    return value === Nothing ? True : False\r\n}\r\n\r\nexport const isRga = (value) => {\r\n    var rgaLength = 12\r\n    return value.length === rgaLength ? True : False\r\n}\r\n\r\nexport const checkForm = ( is ) => {\r\n    is = objectToArray( is )\r\n    for(var index = 0; index < is.length; index++){\r\n        var element = is[index]\r\n        if( element !== True ){\r\n            return false\r\n        }\r\n    }\r\n    return true\r\n}","import React from 'react'\r\n\r\nimport { True, False, Valid, Invalid, Nothing } from '../constant'\r\nimport { isVoid } from '../utils/auth'\r\n\r\nconst validation = (value) => {\r\n    return value ? True : False\r\n}\r\n\r\nexport const Input = (props) => {\r\n    var isValid = props.isValid\r\n    var inputValidation = validation(isValid) ? Valid : Invalid\r\n        inputValidation = !isVoid(isValid) ? inputValidation : Nothing\r\n\r\n    return (\r\n        <div className=\"form-label-group\">\r\n            <input \r\n                type={ props.type } \r\n                id={ props.id } \r\n                name={ props.id }\r\n                className={ \"form-control \" + inputValidation } \r\n                placeholder={ props.placeholder } \r\n                onChange={ props.onChange }\r\n                value={ props.value }\r\n                required\r\n            />\r\n            <div className=\"text-center valid-feedback\">\r\n                { props.validMessage }\r\n            </div>\r\n            <div className=\"text-center invalid-feedback\">\r\n                { props.invalidMessage }\r\n            </div>\r\n            <label htmlFor={ props.id }> { props.children } </label>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport { False } from '../constant'\r\n\r\nexport const Submit = (props) => {\r\n    if( props.error === False ){\r\n        return (\r\n            <button id={ props.id } className=\"error-submit btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\"> { props.children } </button>\r\n        )\r\n    } else {\r\n        return (\r\n            <button id={ props.id } className=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\"> { props.children } </button>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport const Loading = (props) => {\r\n    if(props.isLoading){\r\n        return (\r\n            <div className=\"text-center mt-5 mb-5\">\r\n                <div>\r\n                    <i className=\"fas fa-sync fa-7x\" id=\"loading\"></i>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    Carregando\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return props.children\r\n    }\r\n}","import firebase from 'firebase';\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyDUiBlfUjdsVpsl2GjZi9B9Evn2lIs1lqo\",\r\n    authDomain: \"pet-event.firebaseapp.com\",\r\n    databaseURL: \"https://pet-event.firebaseio.com\",\r\n    projectId: \"pet-event\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"61527628241\"\r\n};\r\n\r\nexport const firebaseImpl = firebase.initializeApp(config);\r\nexport const firebaseDatabase = firebase.database();","import {firebaseDatabase} from '../utils/firebaseUtils'\r\n\r\nexport default class FirebaseService {\r\n\r\n    static getOneData = async (path, ...child) => {\r\n\r\n        var query = firebaseDatabase.ref(path)\r\n\r\n        if(child.length !== 0)\r\n            child.forEach((item) => {\r\n                query = query.child(item)\r\n            })\r\n\r\n        const snapshot = await query.once('value')\r\n        const value = snapshot.val()\r\n\r\n        return value\r\n    }\r\n\r\n    static listenIfChildAdded = (path, id, callback) => {\r\n        const query = firebaseDatabase.ref(path).child(id)\r\n\r\n        query.on(\"child_added\", callback);\r\n    }\r\n\r\n    static insertData = (form, path, ...child) => {\r\n        try {\r\n            var query = firebaseDatabase.ref(path)\r\n\r\n            if(child.length !== 0)\r\n                child.forEach((item) => {\r\n                    query = query.child(item)\r\n                })\r\n\r\n            query.set(form)\r\n            return true\r\n        } catch (error) {\r\n            return error\r\n        }\r\n    }\r\n\r\n    static removeData = (path, ...child) => {\r\n        try {\r\n            var query = firebaseDatabase.ref(path)\r\n\r\n            if(child.length !== 0)\r\n                child.forEach((item) => {\r\n                    query = query.child(item)\r\n                })\r\n\r\n            query.remove()\r\n            return true\r\n        } catch (error) {\r\n            return error\r\n        }\r\n    }\r\n\r\n    static updateData = (callback, path, ...child) => {\r\n        try {\r\n            var query = firebaseDatabase.ref(path)\r\n\r\n            if(child.length !== 0)\r\n                child.forEach((item) => {\r\n                    query = query.child(item)\r\n                })\r\n\r\n            query.transaction(callback)\r\n            return true\r\n        } catch (error) {\r\n            return error\r\n        }\r\n    }\r\n\r\n}","import axios from 'axios'\r\nexport const sendEmail = async (email, password) => {\r\n    try {\r\n        const response = await axios.get(`https://ladesp-api-test.herokuapp.com/api/email/v0/pet/${email}/${password}`);\r\n        return response.status\r\n    } catch (error) {\r\n        return error\r\n    }\r\n}\r\n\r\n","import FirebaseService from '../services/firebaseService'\r\nimport { False, True } from '../constant'\r\nimport md5 from 'md5'\r\nimport { sendEmail } from '../utils/email'\r\n\r\nexport const doLogin = async ( form ) => {\r\n    let user = await FirebaseService.getOneData('users', form.rga)\r\n    if( !user || user.password !== md5(form.password) ){\r\n        let error = { isSuccess: False, message: 'Email ou Password não válido'}\r\n        return error\r\n    }\r\n    let success = {\r\n        isSuccess: True,\r\n        data: user\r\n    }\r\n    return success\r\n}\r\n\r\nexport const doInscription = async ( form ) => {\r\n    let user = await FirebaseService.getOneData('users', form.rga)\r\n    if( user ){\r\n        let error = { isSuccess: False, message: 'RGA já cadastrado'}\r\n        return error\r\n    }\r\n    let isSuccess = await FirebaseService.insertData({ ...form, password: md5(form.rga) }, 'users', form.rga)\r\n    let success = { isSuccess: isSuccess, message: 'Cadastrado com successo.'}\r\n\r\n    if(form.email){\r\n        sendEmail( form.email, form.rga )\r\n    }\r\n\r\n    return success\r\n}\r\n\r\nexport const changePassword = async ( password, rga ) => {\r\n    try {\r\n        FirebaseService.updateData((user) => {\r\n            if(user){\r\n                user.password = md5(password)\r\n            }\r\n            return user\r\n        }, 'users', rga)\r\n\r\n        return true\r\n    } catch (error) {\r\n        return false\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { Error } from '../error'\r\nimport Modal from '../../shared/modal/modal'\r\nimport { isPassword, isRga } from '../../utils/auth'\r\n\r\nimport { True, False, Void, InitialInput } from '../../constant'\r\nimport { Input } from '../input'\r\nimport { Submit } from '../submit'\r\nimport { Loading } from '../../shared/loading'\r\nimport { doLogin } from '../auth'\r\nimport { Save } from '../../utils/localStorage'\r\n\r\nexport default class Login extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            loginState: {\r\n                isSuccess: Void,\r\n                message: InitialInput\r\n            },\r\n            isLoading: False,\r\n            isRga: Void,\r\n            isPassword: Void,\r\n            rga: InitialInput,\r\n            password: InitialInput,\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.rgaChange = this.rgaChange.bind(this)\r\n        this.passwordChange = this.passwordChange.bind(this)\r\n        this.LoadingOn = this.LoadingOn.bind(this)\r\n        this.LoadingOff = this.LoadingOff.bind(this)\r\n        this.closeModal = this.closeModal.bind(this)\r\n        this.loginSuccess = this.loginSuccess.bind(this)\r\n    } \r\n\r\n    rgaChange(event){\r\n        var rga = event.target.value\r\n        this.setState({\r\n            rga: rga,\r\n            isRga: isRga(rga)\r\n        });\r\n    }\r\n\r\n    passwordChange(event){\r\n        var password = event.target.value\r\n        this.setState({\r\n            password: password,\r\n            isPassword: isPassword(password)\r\n        });\r\n    }\r\n\r\n    LoadingOn(){\r\n        this.setState({\r\n            isLoading: True\r\n        })\r\n    }\r\n\r\n    LoadingOff(){\r\n        this.setState({\r\n            isLoading: False\r\n        })\r\n    }\r\n\r\n    closeModal(){\r\n        var buttonClose = document.querySelector('#closelogin')\r\n        buttonClose.click()\r\n    }\r\n\r\n    loginSuccess(){\r\n        this.props.history.push('users')\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        event.preventDefault()\r\n\r\n        this.LoadingOn()\r\n\r\n        var loginState = await doLogin({\r\n            rga: this.state.rga,\r\n            password: this.state.password\r\n        })\r\n\r\n        if(!loginState.isSuccess){\r\n            this.setState({\r\n                loginState: loginState,\r\n                isRga: Void,\r\n                isPassword: Void,\r\n            })\r\n        } else {\r\n            Save(loginState.data)\r\n            this.closeModal()\r\n            setTimeout( this.loginSuccess , 1000);\r\n            \r\n        }\r\n\r\n        setTimeout( this.LoadingOff , 3000);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Modal id=\"login\"> \r\n                <h3 className=\"login-heading mb-4\">Entrar</h3>\r\n                <form onSubmit={ this.handleSubmit }>\r\n\r\n                    <Loading isLoading={ this.state.isLoading }>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"rgaLogin\"\r\n                            placeholder=\"User\"\r\n                            onChange={ this.rgaChange }\r\n                        >\r\n                            User\r\n                        </Input>\r\n                        <Input\r\n                            type=\"password\"\r\n                            id=\"passwordLogin\"\r\n                            placeholder=\"Password\"\r\n                            onChange={ this.passwordChange }\r\n                            isValid={ this.state.isPassword }\r\n                            invalidMessage=\"Insira uma senha com no mínimo 8 caracteres\"\r\n                        >\r\n                            Senha\r\n                        </Input>\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Error { ...this.state.loginState }/>\r\n                        <Submit id=\"idLogin\"> Entrar </Submit>\r\n                    </Loading>\r\n\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport const Select = (props) => {\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"group\"> { props.name } </label>\r\n            <div className=\"form-label-group rounded\">\r\n                <select name={ props.id } className=\"form-control\" value={ props.value } onChange={ props.onChange } id={ props.id }>\r\n                    { props.children }\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Option = (props) => {\r\n    return (\r\n        <option { ...props }> { props.children } </option>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Textarea = (props) => {\r\n    return (\r\n        <div>\r\n            <label htmlFor={ props.id } className=\"mt-3\"> { props.name } </label>\r\n            <div className=\"form-label-group\">\r\n                <textarea \r\n                    name={ props.id }\r\n                    className=\"form-control\" \r\n                    id={ props.id } \r\n                    rows=\"3\" \r\n                    onChange={ props.onChange } \r\n                    value={ props.value }\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\n\r\nimport Modal from '../../shared/modal/modal'\r\nimport { Error } from '../error'\r\nimport { isNothing, isRga, isEmail, checkForm } from '../../utils/auth'\r\nimport { doInscription } from '../auth'\r\n\r\nimport { True, False, Void, InitialInput, InscriptionType } from '../../constant'\r\nimport { Input } from '../input'\r\nimport { Submit } from '../submit'\r\nimport { Loading } from '../../shared/loading'\r\nimport { Select, Option } from '../select'\r\nimport { Textarea } from '../textarea'\r\n\r\nexport default class Login extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            isLoading: False,\r\n            isSuccessSubmit: Void,\r\n            inscriptionState: {\r\n                isSuccess: Void,\r\n                message: InitialInput\r\n            },\r\n\r\n            is:{\r\n                isRga: Void,\r\n                isName: Void,\r\n                isEmail: Void,\r\n                isCourse: Void,\r\n                isContact: Void,\r\n                isEmergencyContact: Void\r\n            },\r\n\r\n            form: {\r\n                rga: InitialInput,\r\n                name: InitialInput,\r\n                email: InitialInput,\r\n                course: InitialInput,\r\n                contact: InitialInput,\r\n                emergencyContact: InitialInput,\r\n                group: 'Três Lagoas - Conexões de Saberes Matemáticos',\r\n                gender: 'Feminino',\r\n                ethnicity: 'Branco',\r\n                arrivalDate: '22/03/2018',\r\n                departureDate: '23/03/2018',\r\n                allergy: '',\r\n                deficiency: '',\r\n                type: InscriptionType\r\n            }\r\n        }\r\n\r\n        this.rgaChange = this.rgaChange.bind(this)\r\n        this.nameChange = this.nameChange.bind(this)\r\n        this.emailChange = this.emailChange.bind(this)\r\n        this.courseChange = this.courseChange.bind(this)\r\n        this.contactChange = this.contactChange.bind(this)\r\n        this.emergencyContactChange = this.emergencyContactChange.bind(this)\r\n        this.inputChange = this.inputChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        \r\n        this.LoadingOn = this.LoadingOn.bind(this)\r\n        this.LoadingOff = this.LoadingOff.bind(this)\r\n        this.submitError = this.submitError.bind(this)\r\n        this.submitDefault = this.submitDefault.bind(this)\r\n    }\r\n\r\n    inputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n            form: { ...this.state.form, [name]: value },\r\n        });\r\n    }\r\n\r\n    rgaChange(event){\r\n        var rga = event.target.value\r\n        this.setState({\r\n            form: { ...this.state.form, rga: rga },\r\n            is: { ...this.state.is, isRga: isRga(rga) }\r\n        });\r\n    }\r\n\r\n    emailChange(event){\r\n        var email = event.target.value\r\n        this.setState({\r\n            form: { ...this.state.form, email: email },\r\n            is: { ...this.state.is, isEmail: isEmail(email) }\r\n        });\r\n    }\r\n\r\n    nameChange(event){\r\n        var name = event.target.value\r\n        this.setState({\r\n            form: { ...this.state.form, name: name },\r\n            is: { ...this.state.is, isName: !isNothing(name) }\r\n        });\r\n    }\r\n\r\n    courseChange(event){\r\n        var course = event.target.value\r\n        this.setState({\r\n            form: { ...this.state.form, course: course },\r\n            is: { ...this.state.is, isCourse: !isNothing(course) }\r\n        });\r\n    }\r\n\r\n    contactChange(event){\r\n        var contact = event.target.value\r\n        this.setState({\r\n            form: { ...this.state.form, contact: contact },\r\n            is: { ...this.state.is, isContact: !isNothing(contact) }\r\n        });\r\n    }\r\n\r\n    emergencyContactChange(event){\r\n        var emergencyContact = event.target.value\r\n        this.setState({\r\n            form: { ...this.state.form, emergencyContact: emergencyContact },\r\n            is: { ...this.state.is, isEmergencyContact: !isNothing(emergencyContact) }\r\n        });\r\n    }\r\n\r\n    LoadingOn(){\r\n        this.setState({\r\n            isLoading: True\r\n        })\r\n    }\r\n\r\n    LoadingOff(){\r\n        this.setState({\r\n            isLoading: False\r\n        })\r\n    }\r\n\r\n    submitError(){\r\n        this.setState({\r\n            isSuccessSubmit: False\r\n        })\r\n    }\r\n\r\n    submitDefault(){\r\n        this.setState({\r\n            isSuccessSubmit: Void\r\n        })\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        event.preventDefault()\r\n        if( !checkForm( this.state.is ) ){\r\n            this.submitError()\r\n            setTimeout( this.submitDefault, 2000)\r\n        } else {\r\n            this.LoadingOn()\r\n\r\n            let doInscriptionResponse = await doInscription( this.state.form )\r\n            this.setState({\r\n                inscriptionState: doInscriptionResponse\r\n            })\r\n\r\n            setTimeout( this.LoadingOff, 2000)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Modal id=\"register\"> \r\n                <Loading isLoading={ this.state.isLoading }>\r\n                    <h3 className=\"login-heading mb-4\">Inscreva-se no evento</h3>\r\n                    <form onSubmit={ this.handleSubmit }>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"nameInscription\"\r\n                            placeholder=\"Nome\"\r\n                            onChange={ this.nameChange }\r\n                            isValid={ this.state.is.isName }\r\n                            value={ this.state.form.name }\r\n                            invalidMessage=\"Insira um nome\"\r\n                        >\r\n                            Nome\r\n                        </Input>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"rgaInscription\"\r\n                            placeholder=\"Insira o seu RGA. O RGA será o seu user\"\r\n                            onChange={ this.rgaChange }\r\n                            isValid={ this.state.is.isRga }\r\n                            value={ this.state.form.rga }\r\n                            invalidMessage=\"Insira um rga válido.\"\r\n                        >\r\n                            Insira o seu RGA. O RGA será o seu user\r\n                        </Input>\r\n                        <Input\r\n                            type=\"email\"\r\n                            id=\"emailInscription\"\r\n                            placeholder=\"Email\"\r\n                            onChange={ this.emailChange }\r\n                            isValid={ this.state.is.isEmail }\r\n                            value={ this.state.form.email }\r\n                            invalidMessage=\"Insira um email válido\"\r\n                        >\r\n                            Email\r\n                        </Input>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"courseInscription\"\r\n                            placeholder=\"Curso\"\r\n                            onChange={ this.courseChange }\r\n                            isValid={ this.state.is.isCourse }\r\n                            value={ this.state.form.course }\r\n                            invalidMessage=\"Insira um curso\"\r\n                        >\r\n                            Curso\r\n                        </Input>\r\n\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Select name=\"Grupo\" id=\"group\" value={ this.state.form.group } onChange={ this.inputChange }>\r\n                            <Option>Três Lagoas - Conexões de Saberes Matemáticos</Option>\r\n                            <Option>Três Lagoas - Geografia</Option>\r\n                            <Option>Três Lagoas - Enfermagem</Option>\r\n                            <Option>Três Lagoas - História</Option>\r\n                            <Option>Três Lagoas - Matemática</Option>\r\n\r\n                            <Option>Chapadão do Sul - Agronomia e Engenharia Florestal</Option>\r\n\r\n                            <Option>Campo Grande - Farmácia</Option>\r\n                            <Option>Campo Grande - Zootecnia</Option>\r\n                            <Option>Campo Grande - Química</Option>\r\n                            <Option>Campo Grande - Educação Física</Option>\r\n                            <Option>Campo Grande - Engenharia Elétrica</Option>\r\n                            <Option>Campo Grande - Materiais</Option>\r\n                            <Option>Campo Grande - Ciência da Computação</Option>\r\n                            <Option>Campo Grande - Sistemas</Option>\r\n\r\n                            <Option>Ponta Porã - Fronteira</Option>\r\n                            <Option>Ponta Porã - Conexões de Saberes Matemática</Option>\r\n\r\n                            <Option>Naviral - Pedagogia e Ciência Sociais</Option>\r\n                        </Select>\r\n                        <Select name=\"Sexo\" id=\"gender\" value={ this.state.form.gender } onChange={ this.inputChange }>\r\n                            <Option>Feminino</Option>\r\n                            <Option>Masculino</Option>\r\n                        </Select>\r\n                        <Select name=\"Etnia\" id=\"ethnicity\" value={ this.state.form.ethnicity } onChange={ this.inputChange }>\r\n                            <Option>Branco</Option>\r\n                            <Option>Negro</Option>\r\n                            <Option>Indígena</Option>\r\n                            <Option>Pardo</Option>\r\n                            <Option>Caboclo</Option>\r\n                            <Option>Cafuzo</Option>\r\n                        </Select>\r\n                        <Select name=\"Data de Chegada\" id=\"arrivalDate\" value={ this.state.form.arrivalDate } onChange={ this.inputChange }>\r\n                            <Option>22/03/2018</Option>\r\n                            <Option>23/03/2018</Option>\r\n                        </Select>\r\n                        <Select name=\"Data de Saída\" id=\"departureDate\" value={ this.state.form.departureDate } onChange={ this.inputChange }>\r\n                            <Option>23/03/2018</Option>\r\n                            <Option>24/03/2018</Option>\r\n                        </Select>\r\n\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"contactInscription\"\r\n                            placeholder=\"Contato\"\r\n                            onChange={ this.contactChange }\r\n                            isValid={ this.state.is.isContact }\r\n                            value={ this.state.form.contact }\r\n                            invalidMessage=\"Insira um contato\"\r\n                        >\r\n                            Contato\r\n                        </Input>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"emergencyContactInscription\"\r\n                            placeholder=\"Contato de Emergência\"\r\n                            onChange={ this.emergencyContactChange }\r\n                            isValid={ this.state.is.isEmergencyContact }\r\n                            value={ this.state.form.emergencyContact }\r\n                            invalidMessage=\"Insira um contato de emergência\"\r\n                        >\r\n                            Contato de Emergência\r\n                        </Input>\r\n\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Textarea id=\"allergy\" name=\"Intolerância/Alergia\" onChange={ this.inputChange } value={ this.state.form.allergy }/>\r\n                        <Textarea id=\"deficiency\" name=\"Deficiência\" onChange={ this.inputChange } value={ this.state.form.deficiency }/>\r\n\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Error { ...this.state.inscriptionState }/>\r\n                        <Submit error={ this.state.isSuccessSubmit } id=\"idInscription\"> Inscreva-se </Submit>\r\n                    </form>\r\n                </Loading>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport Main from '../shared/container/main'\r\nimport ModalButton from '../shared/modal/button'\r\nimport Markdown from '../shared/markdown'\r\nimport Login from '../auth/login'\r\nimport Inscription from '../auth/inscription'\r\n\r\nexport default class Description extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        if(this.props.isLoggedIn){\r\n            if(this.props.history.location.pathname === '/')\r\n                this.props.history.push('users')\r\n            else\r\n                this.props.history.push('users')\r\n            \r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Main>\r\n                <div className=\"col-md-7 col-lg-8 bg-white rounded\"> \r\n                    <div className=\"text-right\">\r\n                        <ModalButton target=\"#login\"> Entrar </ModalButton>\r\n                        <ModalButton target=\"#register\"> Inscreva-se </ModalButton>\r\n                    </div>\r\n                    <Markdown />\r\n                </div>\r\n                <Login history={ this.props.history }/>\r\n                <Inscription />\r\n            </Main>\r\n        )\r\n    }\r\n}","import FirebaseService from '../services/firebaseService'\r\n\r\nexport const getActiveties = async () => {\r\n    var activeties = await FirebaseService.getOneData('activeties')\r\n    return activeties\r\n}\r\n\r\nexport const getUserActiveties = async (rga) => {\r\n    var activeties = await FirebaseService.getOneData('users', rga, 'activeties')\r\n    return activeties\r\n}\r\n\r\nexport const getUsers = async () => {\r\n    var users = await FirebaseService.getOneData('users')\r\n    return users\r\n}\r\n\r\nexport const activityInscription = async (rga, activity, name) => {\r\n    var formInscription = {\r\n        inscription: true\r\n    }\r\n\r\n    var formUser = {\r\n        rga: rga,\r\n        presence: false,\r\n        name: name\r\n    }\r\n\r\n    var hasInserted = await FirebaseService.insertData(formInscription, 'users', rga, 'activeties', activity)\r\n\r\n    var activityName = activity\r\n    await FirebaseService.updateData((activity) => {\r\n        if(activity){\r\n            activity.vacancies--\r\n        }\r\n        return activity\r\n    }, 'activeties', activityName)\r\n\r\n    setTimeout(() => {\r\n        FirebaseService.insertData(formUser, 'activeties', activity, 'users', rga)\r\n    }, 1000);\r\n\r\n    return hasInserted\r\n}\r\n\r\nexport const removeActivityInscription = async (rga, activity) => {\r\n    var hasRemoved = await FirebaseService.removeData('users', rga, 'activeties', activity)\r\n    setTimeout(() => {\r\n        FirebaseService.removeData('activeties', activity, 'users', rga)\r\n    }, 1000);\r\n    return hasRemoved\r\n}\r\n\r\nexport const updateDecrementVacanciesActivity = async (activityName) => {\r\n    var hasRemoved = await FirebaseService.updateData((activity) => {\r\n        if(activity){\r\n            activity.vacancies--\r\n        }\r\n        return activity\r\n    }, 'activeties', activityName)\r\n    return hasRemoved\r\n}\r\n\r\nexport const updateIncrementVacanciesActivity = async (activityName) => {\r\n    var hasRemoved = await FirebaseService.updateData((activity) => {\r\n        if(activity){\r\n            activity.vacancies++\r\n        }\r\n        return activity\r\n    }, 'activeties', activityName)\r\n    return hasRemoved\r\n}\r\n\r\nexport const updateVacanciesActivity = async (activityName, vacancies) => {\r\n    var hasUpdated = await FirebaseService.updateData((activity) => {\r\n        if(activity){\r\n            activity.vacancies = parseInt(activity.vacancies) + parseInt(vacancies)\r\n        }\r\n        return activity\r\n    }, 'activeties', activityName)\r\n    return hasUpdated\r\n}","import React from 'react'\r\n\r\nexport const ListGroup = ( props ) => {\r\n    return (\r\n        <div className=\"col-md-4 p-2\">\r\n            <div className=\"list-group rounded shadow\" id=\"list-tab-activities\" role=\"tablist\">\r\n                { props.children }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const ListGroupContent = ( props ) => {\r\n    return (\r\n        <div className=\"col-md-8\">\r\n            <div className=\"tab-content\" id=\"nav-tabContent\">\r\n                { props.children }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const ListGroupContentSupport = ( props ) => {\r\n    return (\r\n        <div class=\"col-md-8\">\r\n            <div class=\"tab-content\" id=\"nav-tabContent\">\r\n                { props.children }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { \r\n    activityInscription, \r\n    removeActivityInscription,\r\n    updateIncrementVacanciesActivity\r\n} from '../effects'\r\nimport { objectToArray } from '../../utils/document'\r\nimport { Null } from '../../constant';\r\n\r\n\r\nexport const ItemGroup = ( props ) => {\r\n    var className = `list-group-item list-group-item-action ` + ( props.id === 0 ? 'active' : '' )\r\n    var itemId = `item-${props.id}`\r\n    var contentId = `#content-${props.id}`\r\n    return (\r\n        <a className={ className } id={ itemId } data-toggle=\"list\" href={ contentId } role=\"tab\" aria-controls=\"home\">\r\n            { props.title }\r\n            { props.hasInscription ? (<span className=\"badge badge-success badge-pill\">inscrito</span>) : null }\r\n        </a>\r\n    )\r\n}\r\n\r\nexport const ItemGroupContent = ( props ) => {\r\n    var className = `mt-2 text-justify tab-pane fade show ` + ( props.id === 0 ? 'active' : '' )\r\n    var itemId = `content-${props.id}`\r\n    \r\n    var inscriptionButton = props.vacancies !== 0 ? props.hasInscription ? (\r\n        <button type=\"button\" onClick={ \r\n            async () => {\r\n                await removeActivityInscription(props.rga, props.title) \r\n                await updateIncrementVacanciesActivity(props.title)\r\n                props.reload()\r\n            }\r\n        } className=\"btn btn-outline-danger\">Sair da atividade</button>\r\n    ) : (\r\n        <button type=\"button\" onClick={ \r\n            async () => {\r\n                await activityInscription(props.rga, props.title, props.name) \r\n                props.reload()\r\n            }\r\n        } className=\"btn btn-outline-primary\">Inscrever-se na atividade</button>\r\n    ) : null\r\n\r\n    return (\r\n        <div className={ className } id={ itemId } role=\"tabpanel\" aria-labelledby=\"list-home-list\">\r\n            <p>{ props.description }</p>\r\n            { props.type !== \"ALL\" ? inscriptionButton : null }\r\n            { props.vacancies ? (\r\n                <div>\r\n                    <span className=\"badge badge-success badge-pill\"> { `Vagas: ${props.vacancies}` }</span>\r\n                </div>\r\n            ) : null }\r\n        </div>\r\n    )\r\n}\r\n\r\n//Support\r\n\r\nexport const ItemGroupContentSupport = (props) => {\r\n    var className = `mt-2 text-justify tab-pane fade show ` + ( props.id === 0 ? 'active' : '' )\r\n    var itemId = `content-${props.id}`\r\n    var users = objectToArray( props.users ? props.users : [] )\r\n\r\n    var listUsers = users.map((user, index) => {\r\n        return (\r\n            <tr key={ index }>\r\n                <th scope=\"row\">{ user.name }</th>\r\n                <td>{ user.rga }</td>\r\n                <td>{ user.presence === true ? 'PRESENTE' : 'PENDENTE'}</td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className={ className } id={ itemId } role=\"tabpanel\" aria-labelledby=\"list-home-list\">\r\n            <Link to={ `${props.match.url}/${props.activityName}/qrcode/${props.type}` } className=\"btn btn-outline-info mb-1\">Frequência</Link>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Nome</th>\r\n                            <th scope=\"col\">RGA</th>\r\n                            <th scope=\"col\">Frequência</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { listUsers }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n//Administrator\r\nexport const ItemGroupContentAdministrator = (props) => {\r\n    var className = `mt-2 text-justify tab-pane fade show ` + ( props.id === 0 ? 'active' : '' )\r\n    var itemId = `content-${props.id}`\r\n    var users = objectToArray( props.users ? props.users : [] )\r\n\r\n    var listUsers = users.map((user, index) => {\r\n        return (\r\n            <tr key={ index }>\r\n                <th scope=\"row\">{ user.name }</th>\r\n                <td>{ user.rga }</td>\r\n                <td>{ user.presence === true ? 'PRESENTE' : 'PENDENTE'}</td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className={ className } id={ itemId } role=\"tabpanel\" aria-labelledby=\"list-home-list\">\r\n            <span className=\"mr-1 badge badge-info\">\r\n                <a onClick={ () => {\r\n                    props.exportToCsv(users, props.activityName)\r\n                } } className=\"mr-1 button-none\">\r\n                    <i className=\"fas mr-1 fa-download\"></i>\r\n                    Exportar para CSV\r\n                </a>\r\n            </span>\r\n            { props.vacancies ? (\r\n                <span className=\"mr-1 badge badge-info\">Vagas: { props.vacancies }</span>\r\n            ) : Null }\r\n            <span className=\"mr-1 badge badge-success\">Inscritos: { users.length }</span>\r\n            { props.vacancies ? (\r\n                <span className=\"mr-1 badge badge-info\">\r\n                    <a onClick={ () => {\r\n                        props.handleActivity(props.activityName)\r\n                    } } className=\"mr-1 button-none\" data-toggle=\"modal\" data-target=\"#plusVacancyModal\">\r\n                        <i className=\"fas mr-1 fa-plus\"></i>\r\n                        Aumentar Vagas\r\n                    </a>\r\n                </span>\r\n            ) : Null }\r\n            \r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Nome</th>\r\n                            <th scope=\"col\">RGA</th>\r\n                            <th scope=\"col\">Frequência</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { listUsers }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\n\r\nimport { LoadApplicationState } from '../utils/localStorage'\r\nimport { objectToArray } from '../utils/document'\r\nimport { getActiveties, getUserActiveties } from './effects'\r\n\r\n\r\nimport { ListGroup, ListGroupContent } from './list/list'\r\nimport { ItemGroup, ItemGroupContent } from './list/item'\r\n\r\nexport default class ActivetiesRegistered extends Component {\r\n    constructor(props){\r\n        \r\n        super(props)\r\n        this.state = {\r\n            user: LoadApplicationState()\r\n        }\r\n\r\n        this.renderActivies = this.renderActivies.bind(this)\r\n        this.reload = this.reload.bind(this)\r\n    }\r\n\r\n    async componentWillMount(){\r\n        this.setState({\r\n            activeties: objectToArray(await getActiveties()),\r\n            myActiveties: await getUserActiveties(this.state.user.rga)\r\n        })\r\n    }\r\n\r\n    async reload(){\r\n        this.setState({\r\n            activeties: objectToArray(await getActiveties()),\r\n            myActiveties: await getUserActiveties(this.state.user.rga)\r\n        })\r\n    }\r\n\r\n    renderActivies(){\r\n        if(!this.state.activeties)\r\n            return null\r\n        \r\n        var hasActiveties = !this.state.myActiveties ? false : true\r\n        const itemGroup = this.state.activeties.map((activity, index) => {\r\n\r\n            var hasInscription = hasActiveties ? this.state.myActiveties[activity.name] ? true : false : false\r\n\r\n            return (\r\n                <ItemGroup \r\n                    key={ index }\r\n                    title={ activity.name }\r\n                    id={ index }\r\n                    hasInscription={ hasInscription } \r\n                />\r\n            )\r\n        });\r\n\r\n        const itemGroupContent = this.state.activeties.map((activity, index) => {\r\n            \r\n            var hasInscription = hasActiveties ? this.state.myActiveties[activity.name] ? true : false : false\r\n\r\n            return (\r\n                <ItemGroupContent \r\n                    key={ index }\r\n                    title={ activity.name }\r\n                    description={ activity.description }\r\n                    id={ index }\r\n                    vacancies={ activity.vacancies }\r\n                    hasInscription={ hasInscription }\r\n                    rga={ this.state.user.rga }\r\n                    reload={ this.reload }\r\n                    type={ activity.inscription }\r\n                    name={ this.state.user.name }\r\n                />\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"mt-2 mb-2 p-3\">\r\n                <div className=\"row\">\r\n                    <ListGroup>\r\n                        { itemGroup }\r\n                    </ListGroup>\r\n                    <ListGroupContent>\r\n                        { itemGroupContent }\r\n                    </ListGroupContent>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return this.renderActivies()\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { LoadApplicationState } from '../utils/localStorage'\r\nimport { objectToArray } from '../utils/document'\r\nimport { getActiveties, getUserActiveties } from './effects'\r\n\r\n\r\nimport { ListGroup, ListGroupContent } from './list/list'\r\nimport { ItemGroup, ItemGroupContentSupport } from './list/item'\r\n\r\nexport default class ActivetiesSupport extends Component {\r\n    constructor(props){\r\n        \r\n        super(props)\r\n        this.state = {\r\n            user: LoadApplicationState()\r\n        }\r\n\r\n        this.renderActivies = this.renderActivies.bind(this)\r\n        this.reload = this.reload.bind(this)\r\n    }\r\n\r\n    async componentWillMount(){\r\n        this.setState({\r\n            activeties: objectToArray(await getActiveties()),\r\n            myActiveties: await getUserActiveties(this.state.user.rga)\r\n        })\r\n    }\r\n\r\n    async reload(){\r\n        this.setState({\r\n            activeties: objectToArray(await getActiveties()),\r\n            myActiveties: await getUserActiveties(this.state.user.rga)\r\n        })\r\n    }\r\n\r\n    renderActivies(){\r\n        if(!this.state.activeties)\r\n            return null\r\n        \r\n        var hasActiveties = !this.state.myActiveties ? false : true\r\n        const itemGroup = this.state.activeties.map((activity, index) => {\r\n\r\n            var hasInscription = hasActiveties ? this.state.myActiveties[activity.name] ? true : false : false\r\n\r\n            return (\r\n                <ItemGroup \r\n                    key={ index }\r\n                    title={ activity.name }\r\n                    id={ index }\r\n                    hasInscription={ hasInscription } \r\n                />\r\n            )\r\n        });\r\n\r\n        const itemGroupContent = this.state.activeties.map((activity, index) => {\r\n            \r\n            return (\r\n                <ItemGroupContentSupport \r\n                    key={ index }\r\n                    id={ index }\r\n                    vacancies={ activity.vacancies }\r\n                    users={ activity.users }\r\n                    activityName={ activity.name }\r\n                    match={ this.props.match }\r\n                    type={ activity.inscription }\r\n                />\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"mt-2 mb-2 p-3\">\r\n                <div className=\"row\">\r\n                    <ListGroup>\r\n                        { itemGroup }\r\n                    </ListGroup>\r\n                    <ListGroupContent>\r\n                        { itemGroupContent }\r\n                    </ListGroupContent>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return this.renderActivies()\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { LoadApplicationState } from '../utils/localStorage'\r\nimport { objectToArray } from '../utils/document'\r\nimport { getActiveties, getUserActiveties, getUsers } from './effects'\r\nimport { dataToCsv, downloadCsv } from '../utils/document'\r\n\r\n\r\nimport { ListGroup, ListGroupContent } from './list/list'\r\nimport { ItemGroup, ItemGroupContentAdministrator } from './list/item'\r\nimport { Nothing, False, InscriptionType } from '../constant';\r\n\r\nexport default class ActivetiesAdministrator extends Component {\r\n    constructor(props){\r\n        \r\n        super(props)\r\n        this.state = {\r\n            user: LoadApplicationState(),\r\n            activitySelected: Nothing\r\n        }\r\n\r\n        this.renderActivies = this.renderActivies.bind(this)\r\n        this.reload = this.reload.bind(this)\r\n        this.exportUsersToCsv = this.exportUsersToCsv.bind(this)\r\n        this.exportToCsv = this.exportToCsv.bind(this)\r\n\r\n    }\r\n\r\n    async componentWillMount(){\r\n        this.setState({\r\n            activeties: objectToArray(await getActiveties()),\r\n            myActiveties: await getUserActiveties(this.state.user.rga)\r\n        })\r\n    }\r\n\r\n    async reload(){\r\n        this.props.reload(False)\r\n        this.setState({\r\n            activeties: objectToArray(await getActiveties()),\r\n            myActiveties: await getUserActiveties(this.state.user.rga)\r\n        })\r\n    }\r\n\r\n    async exportUsersToCsv(){\r\n        var users = objectToArray(await getUsers())\r\n        var usersFormated = []\r\n\r\n        users.forEach((user) => {\r\n            if(user.type === InscriptionType){\r\n                usersFormated.push({\r\n                    ...user,\r\n                    password: ''\r\n                })\r\n            }\r\n        })\r\n\r\n        dataToCsv(usersFormated, (err, csv) => {\r\n            downloadCsv(csv, 'Inscritos')\r\n        })\r\n    }\r\n\r\n    async exportToCsv(data, filename){\r\n        dataToCsv(data, (err, csv) => {\r\n            downloadCsv(csv, filename)\r\n        })\r\n    }\r\n\r\n    renderActivies(){\r\n        if(!this.state.activeties)\r\n            return null\r\n        \r\n        var hasActiveties = !this.state.myActiveties ? false : true\r\n        const itemGroup = this.state.activeties.map((activity, index) => {\r\n\r\n            var hasInscription = hasActiveties ? this.state.myActiveties[activity.name] ? true : false : false\r\n\r\n            return (\r\n                <ItemGroup \r\n                    key={ index }\r\n                    title={ activity.name }\r\n                    id={ index }\r\n                    hasInscription={ hasInscription } \r\n                />\r\n            )\r\n        });\r\n\r\n        const itemGroupContent = this.state.activeties.map((activity, index) => {\r\n            \r\n            return (\r\n                <ItemGroupContentAdministrator\r\n                    exportToCsv={ this.exportToCsv }\r\n                    handleActivity={ this.props.handleActivity } \r\n                    key={ index }\r\n                    id={ index }\r\n                    vacancies={ activity.vacancies }\r\n                    users={ activity.users }\r\n                    activityName={ activity.name }\r\n                    match={ this.props.match }\r\n                    type={ activity.inscription }\r\n                />\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"mt-2 mb-2 p-3\">\r\n                <div className=\"row\">\r\n                    <ListGroup>\r\n                        <a onClick={ this.exportUsersToCsv } className=\"btn btn-outline-info mb-1\">Exportar Inscritos</a>\r\n                        { itemGroup }\r\n                    </ListGroup>\r\n                    <ListGroupContent>\r\n                        { itemGroupContent }\r\n                    </ListGroupContent>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        if(this.props.reloadingPage){\r\n            this.reload()\r\n        }\r\n        \r\n        return this.renderActivies()\r\n    }\r\n}","import React from 'react'\r\n\r\nimport { LoadApplicationState } from '../utils/localStorage'\r\n\r\nconst ShowQrCode = (props) => {\r\n    var user = LoadApplicationState()\r\n    return (\r\n        <div className=\"mt-2 mb-2 p-3\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"card col-lg-5 col-md-8 col-sm-8\">\r\n                    <img \r\n                        className=\"card-img-top\" \r\n                        src={ `https://chart.googleapis.com/chart?cht=qr&chl=${user.rga}&chs=180x180&choe=UTF-8&chld=L|2` } \r\n                    />\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Código de Frequência</h5>\r\n                        <p className=\"card-text text-justify\">Antes de entrar na sala da atividade, mostre para o supervisor o código acima.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowQrCode","import React, { Component } from 'react'\r\n\r\nimport Modal from '../../shared/modal/modal'\r\nimport { Error } from '../error'\r\nimport { changePassword } from '../auth'\r\n\r\nimport { Loading } from '../../shared/loading'\r\nimport { Input } from '../input'\r\nimport { Submit } from '../submit'\r\nimport { Null, False, True, Nothing } from '../../constant';\r\nimport { LoadApplicationState } from '../../utils/localStorage';\r\n\r\n\r\nexport default class ChangePassword extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            changePasswordState: {\r\n                isSuccess: Null,\r\n                message: Nothing\r\n            },\r\n            isLoading: False,\r\n            rga: LoadApplicationState().rga\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.inputChange = this.inputChange.bind(this)\r\n        this.LoadingOn = this.LoadingOn.bind(this)\r\n        this.LoadingOff = this.LoadingOff.bind(this)\r\n    }\r\n\r\n    LoadingOn(){\r\n        this.setState({\r\n            isLoading: True\r\n        })\r\n    }\r\n\r\n    LoadingOff(){\r\n        this.setState({\r\n            isLoading: False\r\n        })\r\n    }\r\n\r\n    inputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n            form: { ...this.state.form, [name]: value },\r\n        });\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        event.preventDefault()\r\n\r\n        if(this.state.form.newPassword.length < 8 || this.state.form.newPasswordConfirmation < 8){\r\n            this.setState({\r\n                changePasswordState: {\r\n                    isSuccess: False,\r\n                    message: 'Insira uma senha com no mínimo 8 caracteres'\r\n                }\r\n            })\r\n\r\n            return false\r\n        }\r\n\r\n        if(this.state.form.newPassword !== this.state.form.newPasswordConfirmation){\r\n            this.setState({\r\n                changePasswordState: {\r\n                    isSuccess: False,\r\n                    message: 'As senha não se correspondem'\r\n                }\r\n            })\r\n            return false\r\n        }\r\n\r\n        this.LoadingOn()\r\n\r\n        var hasUpdated = await changePassword(this.state.form.newPassword, this.state.rga)\r\n        if(hasUpdated){\r\n            this.setState({\r\n                changePasswordState: {\r\n                    isSuccess: True,\r\n                    message: 'A Senha foi mudada'\r\n                }\r\n            })\r\n        } else {\r\n            this.setState({\r\n                changePasswordState: {\r\n                    isSuccess: True,\r\n                    message: 'Houve algum erro...'\r\n                }\r\n            })\r\n        }\r\n\r\n        setTimeout( this.LoadingOff , 1500);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Modal id=\"changePassword\"> \r\n                <h3 className=\"login-heading mb-4\">Login</h3>\r\n                <form onSubmit={ this.handleSubmit }>\r\n                    <Loading isLoading={ this.state.isLoading }>\r\n                        <Input\r\n                            type=\"password\"\r\n                            id=\"newPassword\"\r\n                            placeholder=\"Insira uma senha com no mínimo 8 caracteres\"\r\n                            onChange={ this.inputChange }\r\n                            invalidMessage=\"Insira um rga válido\"\r\n                        >\r\n                            Senha\r\n                        </Input>\r\n                        <Input\r\n                            type=\"password\"\r\n                            id=\"newPasswordConfirmation\"\r\n                            placeholder=\"Repita a senha\"\r\n                            onChange={ this.inputChange }\r\n                        >\r\n                            Repita a senha\r\n                        </Input>\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Error { ...this.state.changePasswordState }/>\r\n                        <Submit id=\"idChangePassword\"> Trocar Senha </Submit>\r\n                    </Loading>\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import FirebaseService from '../services/firebaseService'\r\nimport { True, False } from '../constant';\r\n\r\nexport const presence = async (activityName, rga, activityType) => {\r\n    const user = await FirebaseService.getOneData('users', rga)\r\n\r\n    if(!user)\r\n        return False\r\n\r\n    if(activityType === 'ALL'){\r\n\r\n        var form = {\r\n            rga: user.rga,\r\n            presence: true,\r\n            name: user.name\r\n        }\r\n\r\n        return FirebaseService.insertData(form, 'activeties', activityName, 'users', user.rga)\r\n        \r\n    }\r\n\r\n    const isSuccess = await FirebaseService.updateData((inscription) => {\r\n        if(inscription){\r\n            inscription.presence = true\r\n        }\r\n        return inscription\r\n    }, 'activeties', activityName, 'users', rga)\r\n    console.log(isSuccess)\r\n\r\n    return True\r\n} ","import React, { Component } from 'react'\r\n\r\nimport QrReader from \"react-qr-reader\";\r\nimport { Error } from '../auth/error'\r\n\r\nimport { Loading } from '../shared/loading'\r\nimport { False, True, Void, InitialInput } from '../constant';\r\nimport { presence } from './effects'\r\n\r\nexport default class Reader extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            presenceState: {\r\n                isSuccess: Void,\r\n                message: InitialInput\r\n            },\r\n            activityName: this.props.match.params.activity,\r\n            activityType: this.props.match.params.type,\r\n            delay: 500,\r\n            isLoading: False,\r\n            startPresence: False\r\n        }\r\n\r\n        this.handleScan = this.handleScan.bind(this)\r\n    }\r\n\r\n    async handleScan(data) {\r\n        if (data && !this.state.startPresence) {\r\n            this.setState({\r\n                isLoading: True,\r\n                startPresence: True\r\n            })\r\n\r\n            var isSuccess = await presence(this.state.activityName, data, this.state.activityType)\r\n            var presenceState = isSuccess ? {\r\n                isSuccess: True,\r\n                message: 'Presença realizada'\r\n            } : {\r\n                isSuccess: False,\r\n                message: 'Erro ao realizar a presença'\r\n            }\r\n\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    isLoading: False,\r\n                    presenceState: presenceState,\r\n                    startPresence: False\r\n                })\r\n            }, 1500);\r\n        }\r\n    }\r\n    \r\n    handleError(err) {\r\n        console.error(err);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"mt-2 mb-2 p-3\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"card col-lg-5 col-md-8 col-sm-8\">\r\n                        <Loading isLoading={ this.state.isLoading }>\r\n                            <QrReader\r\n                                delay={this.state.delay}\r\n                                onError={this.handleError}\r\n                                onScan={this.handleScan}\r\n                                style={{ width: \"100%\" }}\r\n                            />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Leitor de Frequência</h5>\r\n                                <p className=\"card-text text-justify\">\r\n                                    Coloque o leitor em frente do código do inscrito. Quando for reconhecido, será alertado se a frequência foi efetuada ou se deu erro.\r\n                                </p>\r\n                            </div>\r\n                            <Error { ...this.state.presenceState }/>\r\n                        </Loading>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport Modal from '../../shared/modal/modal'\r\nimport { Error } from '../../auth/error'\r\nimport { Loading } from '../../shared/loading'\r\nimport { Input } from '../../auth/input'\r\nimport { Submit } from '../../auth/submit'\r\n\r\nimport { Null, Nothing, False, True } from '../../constant'\r\nimport { updateVacanciesActivity } from '../effects'\r\n\r\nexport default class PlusVacancy extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            changeVacancyState: {\r\n                isSuccess: Null,\r\n                message: Nothing\r\n            },\r\n            isLoading: False,\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.inputChange = this.inputChange.bind(this)\r\n        this.LoadingOn = this.LoadingOn.bind(this)\r\n        this.LoadingOff = this.LoadingOff.bind(this)\r\n    }\r\n\r\n    LoadingOn(){\r\n        this.setState({\r\n            isLoading: True\r\n        })\r\n    }\r\n\r\n    LoadingOff(){\r\n        this.setState({\r\n            isLoading: False\r\n        })\r\n    }\r\n\r\n    inputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n            form: { ...this.state.form, [name]: value },\r\n        });\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        event.preventDefault()\r\n\r\n        this.LoadingOn()\r\n\r\n        var hasUpdated = await updateVacanciesActivity(this.props.activityName, this.state.form.plusVacancy)\r\n\r\n        if(hasUpdated){\r\n            this.setState({\r\n                changeVacancyState: {\r\n                    isSuccess: True,\r\n                    message: 'As vagas foram atualizadas'\r\n                }\r\n            })\r\n        } else {\r\n            this.setState({\r\n                changeVacancyState: {\r\n                    isSuccess: False,\r\n                    message: 'Aconteceu algum erro'\r\n                }\r\n            })\r\n        }\r\n        \r\n        this.props.reload()\r\n\r\n        setTimeout( this.LoadingOff , 1500);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Modal id=\"plusVacancyModal\"> \r\n                <h3 className=\"login-heading mb-4\">Aumentar Vagas</h3>\r\n                <form onSubmit={ this.handleSubmit }>\r\n                    <Loading isLoading={ this.state.isLoading }>\r\n                        <Input\r\n                            type=\"number\"\r\n                            id=\"plusVacancy\"\r\n                            placeholder=\"Mais Vagas\"\r\n                            onChange={ this.inputChange }\r\n                        >\r\n                            Mais Vagas\r\n                        </Input>\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Error { ...this.state.changeVacancyState }/>\r\n                        <Submit id=\"submitPlusVacancy\"> Salvar </Submit>\r\n                    </Loading>\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import FirebaseService from '../services/firebaseService'\r\nimport { objectToArray } from '../utils/document'\r\n\r\nexport const getSupportUsers = async () => {\r\n    var users = await FirebaseService.getOneData('users')\r\n\r\n    if(!users)\r\n        return []\r\n\r\n    users = objectToArray(users)\r\n\r\n    var supportUsers = users.filter((user) => user.type === 'SUPPORT')\r\n\r\n    return supportUsers\r\n}\r\n\r\nexport const deleteSupportUsers = async (rga) => {\r\n    var hasRemoved = await FirebaseService.removeData('users', rga)\r\n\r\n    return hasRemoved\r\n}","import React, { Component } from 'react'\r\n\r\nimport { getSupportUsers, deleteSupportUsers } from './effects'\r\nimport { False } from '../constant';\r\n\r\nexport default class SupportList extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            supportUsers: []\r\n        }\r\n\r\n        this.loadSupportUsers = this.loadSupportUsers.bind(this)\r\n        this.deleteSupportUser = this.deleteSupportUser.bind(this)\r\n        this.renderSupportUsers = this.renderSupportUsers.bind(this)\r\n        this.reload = this.reload.bind(this)\r\n    }\r\n\r\n    async loadSupportUsers(){\r\n        this.setState({\r\n            supportUsers: await getSupportUsers()\r\n        })\r\n    }\r\n\r\n    reload(){\r\n        this.props.reload(False)\r\n        this.loadSupportUsers()\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadSupportUsers()\r\n    }\r\n\r\n    async deleteSupportUser(rga){\r\n        await deleteSupportUsers(rga)\r\n        this.reload()\r\n    }\r\n\r\n    renderSupportUsers(){\r\n        const supportUsers = this.state.supportUsers.map((user, index) => {\r\n            return (\r\n                <tr key={ index }>\r\n                    <td scope=\"row\">{ user.name }</td>\r\n                    <td>{ user.rga }</td>\r\n                    <td>\r\n                        <a onClick={ () => this.deleteSupportUser(user.rga) } className=\"btn btn-outline-danger mb-1\">Excluir</a>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n\r\n        return supportUsers\r\n    }\r\n\r\n    render(){\r\n        if(this.props.reloadingPage){\r\n            this.reload()\r\n        }\r\n        return (\r\n            <div className=\"mt-2 mb-2 p-3\">\r\n                <h1> Time de Suporte </h1>\r\n                <div>\r\n                    <span className=\"badge badge-info mr-1\">Time de apoio: { this.state.supportUsers.length }</span>\r\n                    <span className=\"badge badge-info mr-1\">\r\n                        <a className=\"button-none\" data-toggle=\"modal\" data-target=\"#createSupportUser\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                            Adicionar\r\n                        </a>\r\n                    </span>\r\n                </div>\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table table-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Nome</th>\r\n                                <th scope=\"col\">RGA</th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            { this.renderSupportUsers() }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport Modal from '../../shared/modal/modal'\r\nimport { Error } from '../error'\r\nimport { doInscription } from '../auth'\r\n\r\nimport { Loading } from '../../shared/loading'\r\nimport { Input } from '../input'\r\nimport { Submit } from '../submit'\r\nimport { Null, False, True, Nothing } from '../../constant';\r\n\r\n\r\nexport default class SupportUserInscription extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            changeSupportUserInscriptionState: {\r\n                isSuccess: Null,\r\n                message: Nothing\r\n            },\r\n            form: {\r\n                type: 'SUPPORT'\r\n            },\r\n            isLoading: False,\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.inputChange = this.inputChange.bind(this)\r\n        this.LoadingOn = this.LoadingOn.bind(this)\r\n        this.LoadingOff = this.LoadingOff.bind(this)\r\n    }\r\n\r\n    LoadingOn(){\r\n        this.setState({\r\n            isLoading: True\r\n        })\r\n    }\r\n\r\n    LoadingOff(){\r\n        this.setState({\r\n            isLoading: False\r\n        })\r\n    }\r\n\r\n    inputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n            form: { ...this.state.form, [name]: value },\r\n        });\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        event.preventDefault()\r\n\r\n        this.LoadingOn()\r\n\r\n        var hasSuccess = await doInscription(this.state.form)\r\n        if(hasSuccess.isSuccess){\r\n            this.setState({\r\n                changeSupportUserInscriptionState: {\r\n                    isSuccess: True,\r\n                    message: 'Criado com successo o usuário'\r\n                }\r\n            })\r\n        } else {\r\n            this.setState({\r\n                changeSupportUserInscriptionState: {\r\n                    isSuccess: False,\r\n                    message: 'Houve um erro ao criar o usuário'\r\n                }\r\n            })\r\n        }\r\n\r\n        this.props.reload()\r\n\r\n        setTimeout( this.LoadingOff , 1500);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Modal id=\"createSupportUser\"> \r\n                <h3 className=\"login-heading mb-4\">Novo Usuário de Apoio</h3>\r\n                <form onSubmit={ this.handleSubmit }>\r\n                    <Loading isLoading={ this.state.isLoading }>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            placeholder=\"Insira um nome\"\r\n                            onChange={ this.inputChange }\r\n                        >\r\n                            Nome\r\n                        </Input>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"rga\"\r\n                            placeholder=\"Insira um rga\"\r\n                            onChange={ this.inputChange }\r\n                        >\r\n                            RGA\r\n                        </Input>\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Error { ...this.state.changeSupportUserInscriptionState }/>\r\n                        <Submit id=\"idCreateSupportUser\"> Salvar </Submit>\r\n                    </Loading>\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport {Route, Link, Redirect } from \"react-router-dom\";\r\n\r\nimport Main from '../shared/container/main'\r\nimport ActivetiesRegistered from '../activeties/registered'\r\nimport ActivetiesSupport from '../activeties/support'\r\nimport ActivetiesAdministrator from '../activeties/administrator'\r\nimport ShowQrCode from '../qrCode/show'\r\nimport ChangePassword from \"../auth/changePassword\";\r\nimport Reader from '../qrCode/reader'\r\nimport PlusVacancy from '../activeties/plusVacancy/plusVacancy'\r\nimport SupportList from '../supportList/supportList'\r\nimport SupportUserInscription from '../auth/supportUserInscription'\r\n\r\n\r\nimport { RemoveApplicationState, LoadApplicationState } from '../utils/localStorage'\r\nimport { Nothing, False, True } from \"../constant\";\r\n\r\nexport default class UserRoute extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            quit: false,\r\n            user: LoadApplicationState(),\r\n            activitySelected: Nothing,\r\n            reload: False\r\n        }\r\n\r\n        this.registered = this.registered.bind(this)\r\n        this.support = this.support.bind(this)\r\n        this.administrator = this.administrator.bind(this)\r\n        this.quit = this.quit.bind(this)\r\n        this.handleActivity = this.handleActivity.bind(this)\r\n        this.reload = this.reload.bind(this)\r\n    }\r\n\r\n    reload(reload = True){\r\n        this.setState({\r\n            reload: reload\r\n        })\r\n    }\r\n\r\n    handleActivity(activity){\r\n        this.setState({\r\n            activitySelected: activity\r\n        })\r\n    }\r\n\r\n    quit(){\r\n        RemoveApplicationState()\r\n        this.props.reload()\r\n        this.setState({\r\n            quit: true\r\n        })\r\n    }\r\n\r\n    registered(){\r\n        return (\r\n            <Main>\r\n                <div className=\"col-md-10 col-lg-8 bg-white rounded\"> \r\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mt-2 rounded shadow \">\r\n                        <Link className=\"navbar-brand\" to={`${this.props.match.url}/activeties`}>PET EVENTO</Link>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        \r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to={`${this.props.match.url}/activeties`}>Atividades</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to={`${this.props.match.url}/myQrCode`}>Código de Frequência</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" data-toggle=\"modal\" data-target=\"#changePassword\">Mudar Senha</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a onClick={ this.quit } className=\"nav-link\">Sair</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                    <Route path={`${this.props.match.path}activeties`} exact render={\r\n                        (props) => <ActivetiesRegistered user={ this.props.user } {...props}/>\r\n                    }/>\r\n                    <Route path={`${this.props.match.path}myQrCode`} render={\r\n                        (props) => <ShowQrCode {...props}/>\r\n                    }/>\r\n                </div>\r\n                <ChangePassword/>\r\n            </Main>\r\n        )\r\n    }\r\n\r\n    support(){\r\n        return (\r\n            <Main>\r\n                <div className=\"col-md-10 col-lg-8 bg-white rounded\"> \r\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mt-2 rounded shadow \">\r\n                        <Link className=\"navbar-brand\" to={`${this.props.match.url}/activeties`}>PET EVENTO</Link>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        \r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to={`${this.props.match.url}/activeties`}>Atividades</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" data-toggle=\"modal\" data-target=\"#changePassword\">Mudar Senha</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a onClick={ this.quit } className=\"nav-link\">Sair</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                    <Route path={`${this.props.match.path}activeties`} exact render={\r\n                        (props) => <ActivetiesSupport user={ this.props.user } {...props}/>\r\n                    }/>\r\n                    <Route path={`${this.props.match.path}activeties/:activity/qrcode/:type`} render={\r\n                        (props) => <Reader user={ this.props.user } { ...props }/>\r\n                    } />\r\n\r\n                </div>\r\n                <ChangePassword/>\r\n            </Main>\r\n        )\r\n    }\r\n\r\n    administrator(){\r\n        return (\r\n            <Main>\r\n                <div className=\"col-md-10 col-lg-8 bg-white rounded\"> \r\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mt-2 rounded shadow \">\r\n                        <Link className=\"navbar-brand\" to={`${this.props.match.url}/activeties`}>PET EVENTO</Link>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        \r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to={`${this.props.match.url}/activeties`}>Atividades</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to={`${this.props.match.url}/newSupport`}>Time de Suporte</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" data-toggle=\"modal\" data-target=\"#changePassword\">Mudar Senha</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a onClick={ this.quit } className=\"nav-link\">Sair</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                    <Route path={`${this.props.match.path}activeties`} exact render={\r\n                        (props) => <ActivetiesAdministrator\r\n                            reload={ this.reload }\r\n                            reloadingPage={ this.state.reload }\r\n                            handleActivity={ this.handleActivity } \r\n                            user={ this.props.user } \r\n                            {...props}\r\n                        />\r\n                    }/>\r\n                    <Route path={`${this.props.match.path}newSupport`} render={\r\n                        (props) => <SupportList \r\n                            user={ this.props.user } \r\n                            { ...props }\r\n                            reload={ this.reload }\r\n                            reloadingPage={ this.state.reload }\r\n                        />\r\n                    } />\r\n\r\n                </div>\r\n                <ChangePassword/>\r\n                <PlusVacancy reload={ this.reload } activityName={ this.state.activitySelected }/>\r\n                <SupportUserInscription reload={ this.reload }/>\r\n            </Main>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        if(this.state.quit)\r\n            return <Redirect to={{\r\n                pathname: \"/pet-event/\",\r\n            }}/>\r\n        \r\n        switch(this.state.user.type){\r\n            case \"REGISTERED\":\r\n                return this.registered()\r\n            case \"SUPPORT\":\r\n                return this.support()\r\n            case \"ADMINISTRATOR\":\r\n                return this.administrator()\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport { LoadApplicationState } from '../utils/localStorage'\r\n\r\nimport Description from '../description'\r\nimport UserRoute from './user'\r\n\r\nclass Router extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.loadData = this.loadData.bind(this)\r\n    this.reload = this.reload.bind(this)\r\n\r\n    this.loadData()\r\n\r\n    console.log('V 1.0')\r\n  }\r\n\r\n  loadData(){\r\n    var data = LoadApplicationState()\r\n    this.state = {\r\n      isLoggedIn: data ? true : false,\r\n      user: data\r\n    }\r\n  }\r\n\r\n  reload(){\r\n    var data = LoadApplicationState()\r\n    this.setState({\r\n      isLoggedIn: data ? true : false,\r\n      user: data\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/pet-event/\" exact={true} render={ \r\n                  (props) => <Description isLoggedIn={ this.state.isLoggedIn } {...props} /> \r\n                }/>\r\n\r\n                <Route path=\"/users/\" render={ \r\n                  (props) => <UserRoute reload={ this.reload } user={ this.state.user } {...props}/>\r\n                }/>\r\n\r\n                <Route path=\"/pet-event/users/\" render={ \r\n                  (props) => <UserRoute reload={ this.reload } user={ this.state.user } {...props}/>\r\n                }/>\r\n                \r\n                <Route path='*' render={ \r\n                  (props) => <Description isLoggedIn={ this.state.isLoggedIn } {...props} /> \r\n                }/>\r\n            </Switch>\r\n        </ BrowserRouter>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Router;\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Router from './route/route'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router/>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}